{"version":3,"sources":["..\\react-bell-chat\\webpack/universalModuleDefinition","..\\react-bell-chat\\./node_modules/classnames/index.js","..\\react-bell-chat\\external \"react\"","..\\react-bell-chat\\webpack/bootstrap","..\\react-bell-chat\\webpack/runtime/compat get default export","..\\react-bell-chat\\webpack/runtime/define property getters","..\\react-bell-chat\\webpack/runtime/hasOwnProperty shorthand","..\\react-bell-chat\\webpack/runtime/make namespace object","..\\react-bell-chat\\./src/lib/ChatBubble/styles.ts","..\\react-bell-chat\\./src/lib/ChatBubble/classes.ts","..\\react-bell-chat\\./src/lib/ChatBubble/index.tsx","..\\react-bell-chat\\./src/lib/Avatar/styles.ts","..\\react-bell-chat\\./src/lib/Avatar/classes.ts","..\\react-bell-chat\\./src/lib/Avatar/index.tsx","..\\react-bell-chat\\./src/lib/IsTyping/classes.ts","..\\react-bell-chat\\./src/lib/IsTyping/styles.ts","..\\react-bell-chat\\./src/lib/IsTyping/index.tsx","..\\react-bell-chat\\./src/lib/ChatScrollArea/styles.ts","..\\react-bell-chat\\./src/lib/ChatScrollArea/classes.ts","..\\react-bell-chat\\./src/lib/ChatScrollArea/index.tsx","..\\react-bell-chat\\./src/lib/LastSeenAvatar/classes.ts","..\\react-bell-chat\\./src/lib/LastSeenAvatar/styles.ts","..\\react-bell-chat\\./src/lib/LastSeenAvatar/index.tsx","..\\react-bell-chat\\./src/lib/SystemChatBubble/classes.ts","..\\react-bell-chat\\./src/lib/SystemChatBubble/styles.ts","..\\react-bell-chat\\./src/lib/SystemChatBubble/index.tsx","..\\react-bell-chat\\./src/lib/BubbleGroup/styles.ts","..\\react-bell-chat\\./src/lib/BubbleGroup/classes.ts","..\\react-bell-chat\\./src/lib/BubbleGroup/index.tsx","..\\react-bell-chat\\./src/lib/ChatMessagesContainer/classes.ts","..\\react-bell-chat\\./src/lib/ChatMessagesContainer/styles.ts","..\\react-bell-chat\\./src/lib/ChatMessagesContainer/index.tsx","..\\react-bell-chat\\./src/lib/utils/utils.ts","..\\react-bell-chat\\./src/lib/DateRow/classes.ts","..\\react-bell-chat\\./src/lib/DateRow/styles.ts","..\\react-bell-chat\\./src/lib/DateRow/index.tsx","..\\react-bell-chat\\./src/lib/LoadingMessages/styles.ts","..\\react-bell-chat\\./src/lib/LoadingMessages/classes.ts","..\\react-bell-chat\\./src/lib/LoadingMessages/index.tsx","..\\react-bell-chat\\./src/lib/ChatFeed/styles.ts","..\\react-bell-chat\\./src/lib/ChatFeed/classes.ts","..\\react-bell-chat\\./src/lib/ChatFeed/index.tsx"],"names":["root","factory","exports","module","require","define","amd","i","a","self","__WEBPACK_EXTERNAL_MODULE__297__","hasOwn","hasOwnProperty","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","r","Symbol","toStringTag","value","styles","chatBubbleWrapper","position","marginBottom","display","chatBubble","backgroundColor","borderRadius","marginRight","marginLeft","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","userChatBubbleOrientationNormal","recipientChatBubbleOrientationNormal","recipientChatBubble","text","color","fontSize","fontWeight","margin","whiteSpace","userFirstChatBubbleInGroup","borderTopRightRadius","recipientFirstChatBubbleInGroup","borderTopLeftRadius","userLastChatBubbleInGroup","recipientLastChatBubbleInGroup","userCenterChatBubbleInGroup","borderBottomRightRadius","recipientCenterChatBubbleInGroup","borderBottomLeftRadius","createdOn","right","bottom","isSend","lastSeenByContainer","top","width","height","loadingSpinnerColor","isSendIconColor","userChatBubble","userText","recipientText","userCreatedOn","recipientCreatedOn","ChatBubble","props","message","lastSeenAvatarStyles","yourAuthorId","lastSeenAvatarClasses","firstChatBubbleInGroup","centerChatBubbleInGroup","lastChatBubbleInGroup","youAreAuthor","authorId","finalChatBubbleStyles","isFirstInGroup","isCenterInGroup","isLastInGroup","messageStyle","messageClassName","isMouseOverLastSeenContainer","setIsMouseOverLastSeenContainer","onMouseEnterLastSeenContainer","onMouseLeaveLastSeenContainer","style","className","CustomMessageRender","title","toLocaleString","toLocaleTimeString","hour","minute","hour12","xmlns","viewBox","preserveAspectRatio","background","fill","stroke","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","showRecipientLastSeenMessage","lastSeenByAuthors","CustomLastSeenAvatar","onMouseEnter","onMouseLeave","map","author","index","mouseOver","container","left","lineHeight","textAlign","pointerEvents","Memoized","name","avatarName","split","part","toUpperCase","substr","typingAuthors","replace","overflow","padding","flexDirection","render","this","ref","containerRef","maxHeight","minHeight","onScroll","children","scrollContainer","scrollTop","loadOldMessagesThreshold","onLoadOldMessages","apiRef","scrollToBottom","behavior","scrollTo","scrollHeight","scrolledToBottom","clientHeight","scrolledToLoadThreshold","bind","transition","marginTop","textStyle","lastSeenAvatarName","systemChatBubbleContainer","SystemChatBubble","time","systemChatBubbleText","bubbleGroupWrapper","messages","CustomAvatar","bubblesCentered","chatBubbleStyles","avatarStyles","chatBubbleClasses","avatarClasses","showRecipientAvatar","CustomChatBubble","CustomSystemChatBubble","messageNodes","_props","authors","filter","lastSeenMessageId","id","showIsTyping","flex","justifyContent","ChatMessagesContainer","date","toLocaleDateString","weekday","year","month","day","spinnerColor","svgStyle","opacity","isVisible","chatPanel","flexGrow","DefaultChatBubbleFunc","DefaultScrollAreaFunc","DefaultMessageRenderFunc","onMessageSend","scrollApi","componentDidMount","getSnapshotBeforeUpdate","prevProps","prevState","wasScrolledToBottom","componentDidUpdate","snapshot","isLoadingMessages","renderMessages","dateRowStyles","dateRowClasses","bubbleGroupStyles","bubbleGroupClasses","groups","array","groupingKeyFn","Error","reduce","result","item","groupBy","toDateString","jsxKey","keys","forEach","group","messagesGroup","showDateRow","CustomDateRow","concat","messageGroup","renderIsTyping","isTypingStyles","isTypingClasses","isTyping","e","loadingMessagesStyle","chatFeedStyles","chatScrollAreaStyles","loadingMessagesClasses","chatScrollAreaClasses","CustomScrollArea","CustomChatMessagesContainer","chatMessagesContainerClasses","chatMessagesContainerStyles","CustomLoadingMessages","showLoadingMessages","state","hasOldMessages","Promise","resolve","setState","then","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__297__) {\nreturn ","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = __WEBPACK_EXTERNAL_MODULE__297__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as React from 'react';\n\nexport interface ChatBubbleStyles {\n  chatBubbleWrapper?: React.CSSProperties;\n  chatBubble?: React.CSSProperties;\n  systemChatBubbleContainer?: React.CSSProperties;\n  systemChatBubbleText?: React.CSSProperties;\n  userChatBubbleOrientationNormal?: React.CSSProperties;\n  recipientChatBubbleOrientationNormal?: React.CSSProperties;\n  text?: React.CSSProperties;\n  userText?: React.CSSProperties;\n  recipientText?: React.CSSProperties;\n  userChatBubble?: React.CSSProperties;\n  recipientChatBubble?: React.CSSProperties;\n  firstChatBubbleInGroup?: React.CSSProperties;\n  userFirstChatBubbleInGroup?: React.CSSProperties;\n  recipientFirstChatBubbleInGroup?: React.CSSProperties;\n  lastChatBubbleInGroup?: React.CSSProperties;\n  userLastChatBubbleInGroup?: React.CSSProperties;\n  recipientLastChatBubbleInGroup?: React.CSSProperties;\n  centerChatBubbleInGroup?: React.CSSProperties;\n  userCenterChatBubbleInGroup?: React.CSSProperties;\n  recipientCenterChatBubbleInGroup?: React.CSSProperties;\n  createdOn?: React.CSSProperties;\n  recipientCreatedOn?: React.CSSProperties;\n  userCreatedOn?: React.CSSProperties;\n  isSend?: React.CSSProperties;\n\n  lastSeenByContainer?: React.CSSProperties;\n  loadingSpinnerColor?: string;\n  isSendIconColor?: string;\n}\n\nconst styles: ChatBubbleStyles = {\n  chatBubbleWrapper: {\n    position: 'relative',\n    marginBottom: 2,\n    display: 'flex',\n  } as React.CSSProperties,\n  chatBubble: {\n    position: 'relative',\n    backgroundColor: '#0084FF',\n    borderRadius: 7,\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    maxWidth: '80%',\n    paddingTop: 8,\n    paddingBottom: 14,\n    paddingLeft: 14,\n    paddingRight: 14,\n    // boxShadow: 'rgba(0, 0, 0, 0.3) 2px 2px 2px'\n  } as React.CSSProperties,\n  userChatBubbleOrientationNormal: {\n    marginRight: 0,\n  } as React.CSSProperties,\n  recipientChatBubbleOrientationNormal: {\n    marginLeft: 0,\n  } as React.CSSProperties,\n  recipientChatBubble: {\n    backgroundColor: '#ccc',\n  } as React.CSSProperties,\n  text: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 300,\n    margin: 0,\n    marginRight: 30,\n    whiteSpace: 'pre',\n  } as React.CSSProperties,\n  userFirstChatBubbleInGroup: {\n    borderTopRightRadius: 0,\n  } as React.CSSProperties,\n  recipientFirstChatBubbleInGroup: {\n    borderTopLeftRadius: 0,\n  } as React.CSSProperties,\n  userLastChatBubbleInGroup: {\n    borderTopRightRadius: 0,\n  } as React.CSSProperties,\n  recipientLastChatBubbleInGroup: {\n    borderTopLeftRadius: 0,\n  } as React.CSSProperties,\n  userCenterChatBubbleInGroup: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  } as React.CSSProperties,\n  recipientCenterChatBubbleInGroup: {\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n  } as React.CSSProperties,\n  createdOn: {\n    position: 'absolute',\n    right: 14,\n    bottom: 2,\n    fontSize: 9,\n    color: 'rgba(255, 255, 255, 0.55)',\n  } as React.CSSProperties,\n  isSend: {\n    position: 'absolute',\n    right: 2,\n    bottom: 2,\n    fontSize: 9,\n  } as React.CSSProperties,\n  lastSeenByContainer: {\n    position: 'absolute',\n    right: -30,\n    top: 0,\n    width: 20,\n    height: '100%',\n  } as React.CSSProperties,\n  loadingSpinnerColor: 'rgba(255, 255, 255, 0.55)',\n  isSendIconColor: '#cddc39',\n};\n\nexport { styles as DefaultChatBubbleStyles };\n\nexport default styles;\n","export interface ChatBubbleClasses {\r\n  chatBubbleWrapper?: string;\r\n  chatBubble?: string;\r\n  systemChatBubbleContainer?: string;\r\n  systemChatBubbleText?: string;\r\n  userChatBubbleOrientationNormal?: string;\r\n  recipientChatBubbleOrientationNormal?: string;\r\n  text?: string;\r\n  userText?: string;\r\n  recipientText?: string;\r\n  userChatBubble?: string;\r\n  recipientChatBubble?: string;\r\n  firstChatBubbleInGroup?: string;\r\n  userFirstChatBubbleInGroup?: string;\r\n  recipientFirstChatBubbleInGroup?: string;\r\n  lastChatBubbleInGroup?: string;\r\n  userLastChatBubbleInGroup?: string;\r\n  recipientLastChatBubbleInGroup?: string;\r\n  centerChatBubbleInGroup?: string;\r\n  userCenterChatBubbleInGroup?: string;\r\n  recipientCenterChatBubbleInGroup?: string;\r\n  createdOn?: string;\r\n  recipientCreatedOn?: string;\r\n  userCreatedOn?: string;\r\n  isSend?: string;\r\n\r\n  lastSeenByContainer?: string;\r\n}\r\n\r\nconst classes: ChatBubbleClasses = {\r\n  chatBubbleWrapper: 'react-bell-chat__chat-bubble__wrapper',\r\n\r\n  isSend: 'react-bell-chat__chat-bubble__is-send',\r\n\r\n  chatBubble: 'react-bell-chat__chat-bubble',\r\n  userChatBubble: 'react-bell-chat__chat-bubble--user',\r\n  recipientChatBubble: 'react-bell-chat__chat-bubble--recipient',\r\n\r\n  text: 'react-bell-chat__chat-bubble__text',\r\n  userText: 'react-bell-chat__chat-bubble__text--user',\r\n  recipientText: 'react-bell-chat__chat-bubble__text--recipient',\r\n\r\n  createdOn: 'react-bell-chat__chat-bubble__created-on',\r\n  userCreatedOn: 'react-bell-chat__chat-bubble__created-on--user',\r\n  recipientCreatedOn: 'react-bell-chat__chat-bubble__created-on--recipient',\r\n\r\n  lastSeenByContainer: 'react-bell-chat__chat-bubble__last-seen-by__container',\r\n};\r\n\r\nexport { classes as DefaultChatBubbleClasses };\r\n\r\nexport default classes;\r\n","import * as React from 'react';\nimport Message from '../Message';\nimport { Author } from '../Author';\nimport {\n  LastSeenAvatarProps,\n  LastSeenAvatarStyles,\n  LastSeenAvatarClasses,\n} from './../LastSeenAvatar';\nimport classnames from 'classnames';\nimport defaultStyles, { ChatBubbleStyles } from './styles';\nimport defaultClasses, { ChatBubbleClasses } from './classes';\n\nexport * from './styles';\nexport * from './classes';\n\nexport interface MessageRenderProps<T = string> {\n  message: Message<T>;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport interface ChatBubbleProps<T = string> {\n  message: Message<T>;\n  author?: Author;\n\n  styles?: ChatBubbleStyles;\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\n\n  classes?: ChatBubbleClasses;\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\n\n  bubblesCentered?: boolean;\n  yourAuthorId: number;\n  isFirstInGroup?: boolean;\n  isLastInGroup?: boolean;\n  isCenterInGroup?: boolean;\n  lastSeenByAuthors?: Author[];\n  showRecipientLastSeenMessage?: boolean;\n  CustomLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\n  CustomMessageRender?: (props: MessageRenderProps<T>) => JSX.Element | string;\n}\n\nexport interface ChatBubbleState {\n  mouseOverLastSeenContainer: boolean;\n}\n\nexport function ChatBubble<T = string>(props: ChatBubbleProps<T>) {\n  if (!props.message) {\n    return null;\n  }\n\n  const {\n    lastSeenAvatarStyles,\n    yourAuthorId,\n    lastSeenAvatarClasses,\n    styles,\n    classes,\n  } = props;\n\n  const {\n    userChatBubble,\n    chatBubble,\n    text,\n    userText,\n    recipientText,\n    recipientChatBubble,\n    firstChatBubbleInGroup,\n    userFirstChatBubbleInGroup,\n    recipientFirstChatBubbleInGroup,\n    centerChatBubbleInGroup,\n    userCenterChatBubbleInGroup,\n    recipientCenterChatBubbleInGroup,\n    lastChatBubbleInGroup,\n    userLastChatBubbleInGroup,\n    recipientLastChatBubbleInGroup,\n    userChatBubbleOrientationNormal,\n    recipientChatBubbleOrientationNormal,\n    chatBubbleWrapper,\n    createdOn,\n    userCreatedOn,\n    recipientCreatedOn,\n    isSendIconColor,\n    loadingSpinnerColor,\n    lastSeenByContainer,\n  } = styles ?? {};\n  const youAreAuthor = props.message.authorId === yourAuthorId;\n\n  // message.id 0 is reserved for blue\n  const finalChatBubbleStyles: React.CSSProperties = {\n    ...defaultStyles.chatBubble,\n    ...chatBubble,\n    ...(youAreAuthor\n      ? defaultStyles.userChatBubble\n      : defaultStyles.recipientChatBubble),\n    ...(youAreAuthor ? userChatBubble : recipientChatBubble),\n    ...(youAreAuthor\n      ? defaultStyles.userChatBubbleOrientationNormal\n      : defaultStyles.recipientChatBubbleOrientationNormal),\n    ...(youAreAuthor\n      ? userChatBubbleOrientationNormal\n      : recipientChatBubbleOrientationNormal),\n    ...(props.isFirstInGroup && defaultStyles.firstChatBubbleInGroup),\n    ...(props.isFirstInGroup &&\n      (youAreAuthor\n        ? defaultStyles.userFirstChatBubbleInGroup\n        : defaultStyles.recipientFirstChatBubbleInGroup)),\n    ...(props.isCenterInGroup && defaultStyles.centerChatBubbleInGroup),\n    ...(props.isCenterInGroup &&\n      (youAreAuthor\n        ? defaultStyles.userCenterChatBubbleInGroup\n        : defaultStyles.recipientCenterChatBubbleInGroup)),\n    ...(props.isLastInGroup && defaultStyles.lastChatBubbleInGroup),\n    ...(props.isLastInGroup &&\n      (youAreAuthor\n        ? defaultStyles.userLastChatBubbleInGroup\n        : defaultStyles.recipientLastChatBubbleInGroup)),\n    ...(props.isFirstInGroup && firstChatBubbleInGroup),\n    ...(props.isFirstInGroup &&\n      (youAreAuthor\n        ? userFirstChatBubbleInGroup\n        : recipientFirstChatBubbleInGroup)),\n    ...(props.isCenterInGroup && centerChatBubbleInGroup),\n    ...(props.isCenterInGroup &&\n      (youAreAuthor\n        ? userCenterChatBubbleInGroup\n        : recipientCenterChatBubbleInGroup)),\n    ...(props.isLastInGroup && lastChatBubbleInGroup),\n    ...(props.isLastInGroup &&\n      (youAreAuthor\n        ? userLastChatBubbleInGroup\n        : recipientLastChatBubbleInGroup)),\n  };\n\n  const messageStyle = {\n    ...defaultStyles.text,\n    ...text,\n    ...(youAreAuthor ? userText : recipientText),\n  };\n  const messageClassName = classnames(\n    defaultClasses.text,\n    classes?.text,\n    youAreAuthor ? defaultClasses.userText : defaultClasses.recipientText,\n    youAreAuthor ? classes?.userText : classes?.recipientText\n  );\n\n  const [\n    isMouseOverLastSeenContainer,\n    setIsMouseOverLastSeenContainer,\n  ] = React.useState(false);\n\n  const onMouseEnterLastSeenContainer = React.useCallback(\n    () => setIsMouseOverLastSeenContainer(true),\n    []\n  );\n  const onMouseLeaveLastSeenContainer = React.useCallback(\n    () => setIsMouseOverLastSeenContainer(false),\n    []\n  );\n\n  return (\n    <div\n      style={{\n        ...defaultStyles.chatBubbleWrapper,\n        ...chatBubbleWrapper,\n      }}\n      className={classnames(\n        defaultClasses.chatBubbleWrapper,\n        classes?.chatBubbleWrapper\n      )}\n    >\n      <div\n        style={{ ...finalChatBubbleStyles }}\n        className={classnames(defaultClasses.chatBubble, classes?.chatBubble, {\n          [defaultClasses.recipientChatBubble]: !youAreAuthor,\n          [classes?.recipientChatBubble]: !youAreAuthor,\n          [defaultClasses.userChatBubble]: youAreAuthor,\n          [classes?.userChatBubble]: youAreAuthor,\n        })}\n      >\n        {props.CustomMessageRender ? (\n          props.CustomMessageRender({\n            message: props.message,\n            style: messageStyle,\n            className: messageClassName,\n          })\n        ) : (\n          <span style={messageStyle} className={messageClassName}>\n            {props.message.message}\n          </span>\n        )}\n        {props.message.createdOn && (\n          <span\n            style={{\n              ...defaultStyles.createdOn,\n              ...createdOn,\n              ...(youAreAuthor\n                ? defaultStyles.userCreatedOn\n                : defaultStyles.recipientCreatedOn),\n              ...(youAreAuthor ? userCreatedOn : recipientCreatedOn),\n            }}\n            className={classnames(\n              defaultClasses.createdOn,\n              classes?.createdOn,\n              {\n                [defaultClasses.userCreatedOn]: youAreAuthor,\n                [classes?.userCreatedOn]: youAreAuthor,\n                [defaultClasses.recipientCreatedOn]: !youAreAuthor,\n                [classes?.recipientCreatedOn]: !youAreAuthor,\n              }\n            )}\n            title={props.message.createdOn.toLocaleString()}\n          >\n            {props.message.createdOn.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit',\n              hour12: true,\n            })}\n          </span>\n        )}\n        {props.message.isSend !== undefined && youAreAuthor && (\n          <span\n            style={{\n              ...defaultStyles.isSend,\n            }}\n            className={classnames(defaultClasses.isSend, classes?.isSend)}\n            // TODO: Maybe when we do translations\n            // title={props.message.isSend ? 'Send' : 'Sending'}\n          >\n            {props.message.isSend ? (\n              <svg\n                width=\"10px\"\n                height=\"10px\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 10 10\"\n                preserveAspectRatio=\"xMidYMid\"\n                style={{ background: 'none' }}\n              >\n                <path\n                  fill={\n                    isSendIconColor\n                      ? isSendIconColor\n                      : defaultStyles.isSendIconColor\n                  }\n                  {\n                    /* tslint:disable-next-line:max-line-length*/ ...{}\n                  }\n                  d=\"M9,1.7L8.6,1.4C8.5,1.3,8.3,1.3,8.2,1.4L3.9,7C3.8,7.1,3.6,7.1,3.5,7c0,0,0,0,0,0L1.7,5.3c-0.1-0.1-0.3-0.1-0.4,0L1,5.6 C0.9,5.7,0.9,5.9,1,6l2.6,2.6c0.1,0.1,0.3,0.1,0.4,0L9,2.1C9.1,2,9.1,1.8,9,1.7z\"\n                />\n              </svg>\n            ) : (\n              <svg\n                width=\"10px\"\n                height=\"10px\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 100 100\"\n                preserveAspectRatio=\"xMidYMid\"\n                style={{ background: 'none' }}\n              >\n                <path\n                  stroke=\"none\"\n                  d=\"M10 50A40 40 0 0 0 90 50A40 45 0 0 1 10 50\"\n                  fill={\n                    loadingSpinnerColor\n                      ? loadingSpinnerColor\n                      : defaultStyles.loadingSpinnerColor\n                  }\n                  transform=\"rotate(78 50 52.5)\"\n                >\n                  <animateTransform\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    calcMode=\"linear\"\n                    values=\"0 50 52.5;360 50 52.5\"\n                    keyTimes=\"0;1\"\n                    dur=\"1s\"\n                    begin=\"0s\"\n                    repeatCount=\"indefinite\"\n                  />\n                </path>\n              </svg>\n            )}\n          </span>\n        )}\n      </div>\n      {props.showRecipientLastSeenMessage &&\n        props.lastSeenByAuthors &&\n        props.lastSeenByAuthors.length > 0 &&\n        props.CustomLastSeenAvatar && (\n          <div\n            style={{\n              ...defaultStyles.lastSeenByContainer,\n              ...lastSeenByContainer,\n            }}\n            className={classnames(\n              defaultClasses.lastSeenByContainer,\n              classes?.lastSeenByContainer\n            )}\n            onMouseEnter={onMouseEnterLastSeenContainer}\n            onMouseLeave={onMouseLeaveLastSeenContainer}\n            // TODO: Maybe when we do translations\n            /*title={\n                'Last seen by ' +\n                props.lastSeenByAuthors\n                  .map((a) => a.name)\n                  .join(', ')\n                  .replace(/,(?!.*,)/gim, ' and')\n              }*/\n          >\n            {props.lastSeenByAuthors.map((a, i) => (\n              <props.CustomLastSeenAvatar\n                key={i}\n                author={a}\n                styles={lastSeenAvatarStyles}\n                index={i}\n                mouseOver={isMouseOverLastSeenContainer}\n                classes={lastSeenAvatarClasses}\n              />\n            ))}\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default ChatBubble;\n","export interface AvatarStyles {\r\n  container?: React.CSSProperties;\r\n  text?: React.CSSProperties;\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'absolute',\r\n    left: -50,\r\n    top: 0,\r\n    width: 40,\r\n    height: 40,\r\n    lineHeight: '40px',\r\n    fontWeight: 400,\r\n    color: 'white',\r\n    backgroundColor: 'rgb(153, 153, 153)',\r\n    borderRadius: 20,\r\n    textAlign: 'center',\r\n    borderTopRightRadius: 5,\r\n  } as React.CSSProperties,\r\n  text: {\r\n    pointerEvents: 'none',\r\n  } as React.CSSProperties,\r\n};\r\n\r\nexport { styles as DefaultAvatarStyles };\r\n\r\nexport default styles;\r\n","export interface AvatarClasses {\r\n  container?: string;\r\n  text?: string;\r\n}\r\n\r\nconst classes: AvatarClasses = {\r\n  container: 'react-bell-chat__avatar',\r\n  text: 'react-bell-chat__avatar__text',\r\n};\r\n\r\nexport { classes as DefaultAvatarClasses };\r\n\r\nexport default classes;\r\n","import * as React from 'react';\nimport { Author } from '../Author';\nimport classnames from 'classnames';\nimport defaultStyles, { AvatarStyles } from './styles';\nimport defaultClasses, { AvatarClasses } from './classes';\n\nexport * from './classes';\nexport * from './styles';\n\nexport interface AvatarProps {\n  author: Author;\n  styles?: AvatarStyles;\n  classes?: AvatarClasses;\n}\n\nconst Avatar: React.FC<AvatarProps> = (props) => {\n  const { author, classes, styles } = props;\n  return (\n    author && (\n      <div\n        style={{\n          ...defaultStyles.container,\n          ...styles?.container,\n        }}\n        title={author.name}\n        className={classnames(defaultClasses.container, classes?.container)}\n      >\n        <span\n          style={{ ...styles?.text, ...(props.styles && props.styles?.text) }}\n          className={classnames(defaultClasses.text, classes?.text)}\n        >\n          {author.avatarName\n            ? author.avatarName\n            : author.name\n                .split(' ')\n                .map((part) => part[0])\n                .join('')\n                .toUpperCase()\n                .substr(0, 3)}\n        </span>\n      </div>\n    )\n  );\n};\nconst Memoized = React.memo(Avatar);\nexport { Memoized as Avatar };\nexport default Memoized;\n","export interface IsTypingClasses {\r\n  container?: string;\r\n}\r\n\r\nconst classes: IsTypingClasses = {\r\n  container: 'react-bell-chat__is-typing__container',\r\n};\r\n\r\nexport { classes as DefaultIsTypingClasses };\r\n\r\nexport default classes;\r\n","export interface IsTypingStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nconst styles: IsTypingStyles = {\r\n  container: {\r\n    position: 'absolute',\r\n    bottom: 2,\r\n    left: 0,\r\n    right: 0,\r\n    color: 'rgb(204, 204, 204)',\r\n    textAlign: 'center',\r\n  } as React.CSSProperties,\r\n};\r\n\r\nexport { styles as DefaultIsTypingStyles };\r\n\r\nexport default styles;\r\n","import * as React from 'react';\nimport { Author } from '../Author';\nimport classnames from 'classnames';\nimport defaultClasses, { IsTypingClasses } from './classes';\nimport defaultStyles, { IsTypingStyles } from './styles';\nexport * from './classes';\nexport * from './styles';\n\nexport interface IsTypingProps {\n  typingAuthors: Author[];\n  styles?: IsTypingStyles;\n  classes?: IsTypingClasses;\n}\n\nconst IsTyping: React.FC<IsTypingProps> = (props) => {\n  let { styles, classes } = props;\n\n  const style = React.useMemo(\n    () => ({ ...defaultStyles.container, ...styles?.container }),\n    [styles?.container]\n  );\n\n  return (\n    props.typingAuthors &&\n    props.typingAuthors.length > 0 && (\n      <div\n        className={classnames(defaultClasses.container, classes?.container)}\n        style={style}\n      >\n        {props.typingAuthors\n          .map((a) => a.name)\n          .join(', ')\n          .replace(/,(?!.*,)/gim, ' and') +\n          (props.typingAuthors.length === 1 ? ' is ' : ' are ') +\n          'typing'}\n      </div>\n    )\n  );\n};\n\nexport default React.memo(IsTyping);\n","export interface ChatScrollAreaStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nconst styles: ChatScrollAreaStyles = {\r\n  container: {\r\n    overflow: 'auto',\r\n    padding: '0 10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    // flexDirection: 'column-reverse'\r\n  },\r\n};\r\n\r\nexport { styles as DefaultChatScrollAreaStyles };\r\n\r\nexport default styles;\r\n","export interface ChatScrollAreaClasses {\r\n  container?: string;\r\n}\r\n\r\nconst classes: ChatScrollAreaClasses = {\r\n  container: 'react-bell-chat__chat-scroll-area',\r\n};\r\n\r\nexport { classes as DefaultChatScrollAreaClasses };\r\n\r\nexport default classes;\r\n","import * as React from 'react';\nimport classnames from 'classnames';\nimport defaultStyles, { ChatScrollAreaStyles } from './styles';\nimport defaultClasses, { ChatScrollAreaClasses } from './classes';\nexport * from './classes';\nexport * from './styles';\n\nexport interface ChatScrollAreaProps {\n  maxHeight?: string | number;\n  minHeight?: string | number;\n  children?: JSX.Element | JSX.Element[];\n  styles?: ChatScrollAreaStyles;\n  apiRef?: (api: ChatScrollAreaApi) => void;\n  loadOldMessagesThreshold: number;\n  onLoadOldMessages: () => Promise<void>;\n\n  classes?: ChatScrollAreaClasses;\n}\n\nexport interface ChatScrollAreaApi {\n  scrollToBottom: (behavior?: ScrollBehavior) => void;\n  scrollTo: (top: number) => void;\n  scrollTop: () => number;\n  scrollHeight: () => number;\n  clientHeight: () => number;\n  scrolledToBottom: () => boolean;\n  scrolledToLoadThreshold: () => boolean; // Check if we are scrolled to threshold where we need to load messages\n}\n\nexport class ChatScrollArea extends React.PureComponent<ChatScrollAreaProps> {\n  scrollContainer: HTMLDivElement;\n  constructor(props: ChatScrollAreaProps) {\n    super(props);\n    this.containerRef = this.containerRef.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n  }\n\n  public render() {\n    const { styles, classes } = this.props;\n    return (\n      <div\n        ref={this.containerRef}\n        className={classnames(defaultClasses.container, classes?.container)}\n        style={{\n          ...defaultStyles.container,\n          ...(this.props.maxHeight !== undefined\n            ? { maxHeight: this.props.maxHeight }\n            : {}),\n          ...(this.props.minHeight !== undefined\n            ? { minHeight: this.props.minHeight }\n            : {}),\n          ...styles?.container,\n        }}\n        onScroll={this.onScroll}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n\n  private onScroll() {\n    this.scrollContainer &&\n      this.scrollContainer.scrollTop <= this.props.loadOldMessagesThreshold &&\n      this.props.onLoadOldMessages();\n  }\n\n  private containerRef(scrollContainer: HTMLDivElement) {\n    this.scrollContainer = scrollContainer;\n    this.props.apiRef &&\n      this.props.apiRef({\n        scrollToBottom: (behavior = 'auto') =>\n          scrollContainer &&\n          (scrollContainer.scrollTo\n            ? scrollContainer.scrollTo({\n                top: scrollContainer.scrollHeight,\n                behavior,\n              })\n            : (scrollContainer.scrollTop = scrollContainer.scrollHeight)),\n        scrollTo: (top) =>\n          scrollContainer &&\n          (scrollContainer.scrollTo\n            ? scrollContainer.scrollTo({\n                top: top,\n              })\n            : (scrollContainer.scrollTop = top)),\n        scrolledToBottom: () =>\n          this.scrollContainer.clientHeight + this.scrollContainer.scrollTop ===\n          this.scrollContainer.scrollHeight,\n        scrolledToLoadThreshold: () =>\n          this.scrollContainer &&\n          this.scrollContainer.scrollTop <= this.props.loadOldMessagesThreshold,\n        scrollTop: () => this.scrollContainer && this.scrollContainer.scrollTop,\n        scrollHeight: () =>\n          this.scrollContainer && this.scrollContainer.scrollHeight,\n        clientHeight: () =>\n          this.scrollContainer && this.scrollContainer.clientHeight,\n      });\n  }\n}\n\nexport default ChatScrollArea;\n","export interface LastSeenAvatarClasses {\r\n  container?: string;\r\n  text?: string;\r\n}\r\n\r\nconst classes: LastSeenAvatarClasses = {\r\n  container: 'react-bell-chat__last-seen-avatar',\r\n  text: 'react-bell-chat__last-seen-avatar__text',\r\n};\r\n\r\nexport { classes as DefaultLastSeenAvatarClasses };\r\n\r\nexport default classes;\r\n","export interface LastSeenAvatarStyles {\r\n  container?: React.CSSProperties;\r\n  containerMouseOver?: React.CSSProperties;\r\n  text?: React.CSSProperties;\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    width: 20,\r\n    height: 20,\r\n    lineHeight: '20px',\r\n    fontWeight: 400,\r\n    fontSize: 10,\r\n    color: 'white',\r\n    backgroundColor: 'rgb(153, 153, 153)',\r\n    borderRadius: 10,\r\n    textAlign: 'center',\r\n    transition: '0.3s all ease-in-out',\r\n    display: 'block',\r\n    position: 'relative',\r\n  } as React.CSSProperties,\r\n  text: {\r\n    pointerEvents: 'none',\r\n  } as React.CSSProperties,\r\n};\r\n\r\nexport { styles as DefaultLastSeenAvatarStyles };\r\n\r\nexport default styles;\r\n","import * as React from 'react';\nimport { Author } from '../Author';\nimport classnames from 'classnames';\nimport defaultClasses, { LastSeenAvatarClasses } from './classes';\nimport defaultStyles, { LastSeenAvatarStyles } from './styles';\nexport * from './classes';\nexport * from './styles';\n\nexport interface LastSeenAvatarProps {\n  author: Author;\n  index?: number;\n  mouseOver?: boolean;\n  styles?: LastSeenAvatarStyles;\n  classes?: LastSeenAvatarClasses;\n}\n\nconst LastSeenAvatar: React.FC<LastSeenAvatarProps> = (props) => {\n  let { styles, classes, index, mouseOver } = props;\n\n  const style = React.useMemo(\n    () => ({\n      ...defaultStyles.container,\n      ...styles?.container,\n      ...(index > 0 && !mouseOver ? { marginTop: -12 } : { marginTop: -4 }),\n    }),\n    [styles?.container, index, mouseOver]\n  );\n\n  const textStyle = React.useMemo(\n    () => ({\n      ...defaultStyles.text,\n      ...styles?.text,\n    }),\n    [styles?.text]\n  );\n\n  return (\n    props.author && (\n      <div\n        style={style}\n        className={classnames(defaultClasses.container, classes?.container)}\n      >\n        <span\n          style={textStyle}\n          className={classnames(defaultClasses.text, classes?.text)}\n        >\n          {props.author.lastSeenAvatarName\n            ? props.author.lastSeenAvatarName\n            : props.author.name[0].toUpperCase()}\n        </span>\n      </div>\n    )\n  );\n};\n\nexport default React.memo(LastSeenAvatar);\n","import * as classNames from 'classnames';\r\nimport defaultClasses, { ChatBubbleClasses } from '../ChatBubble/classes';\r\n\r\nconst classes: ChatBubbleClasses = {\r\n  chatBubbleWrapper: classNames(\r\n    defaultClasses.chatBubbleWrapper,\r\n    'react-bell-chat__chat-bubble--system'\r\n  ),\r\n  createdOn: 'react-bell-chat__chat-bubble--system__created-on',\r\n};\r\n\r\nexport { classes as DefaultSystemChatBubbleClasses };\r\n\r\nexport default classes;\r\n","import { ChatBubbleStyles } from '../ChatBubble/styles';\r\n\r\nconst styles: ChatBubbleStyles = {\r\n  systemChatBubbleContainer: {\r\n    textAlign: 'center',\r\n    fontSize: 12,\r\n    color: 'rgba(0, 0, 0, 0.55)',\r\n  } as React.CSSProperties,\r\n};\r\n\r\nexport { styles as DefaultSystemChatBubbleStyles };\r\n\r\nexport default styles;\r\n","import * as React from 'react';\nimport { ChatBubbleProps } from '../ChatBubble';\nimport classnames from 'classnames';\nimport defaultClasses from './classes';\nimport defaultStyles from './styles';\nexport * from './classes';\nexport * from './styles';\n\nexport interface SystemChatBubbleProps<T> extends ChatBubbleProps<T> {}\n\nexport function SystemChatBubble<T = string>(props: SystemChatBubbleProps<T>) {\n  const { styles, classes, message } = props;\n\n  const time =\n    message.createdOn &&\n    message.createdOn.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n    });\n\n  const style = React.useMemo(\n    () => ({\n      ...defaultStyles.systemChatBubbleContainer,\n      ...styles?.systemChatBubbleContainer,\n    }),\n    [styles?.systemChatBubbleContainer]\n  );\n  const textStyle = React.useMemo(\n    () => ({\n      ...defaultStyles.systemChatBubbleText,\n      ...styles?.systemChatBubbleText,\n    }),\n    [styles?.systemChatBubbleText]\n  );\n  return (\n    message && (\n      <div\n        className={classnames(\n          defaultClasses.chatBubbleWrapper,\n          classes?.chatBubbleWrapper\n        )}\n        style={style}\n      >\n        {time && (\n          <span\n            className={classnames(defaultClasses.createdOn, classes?.createdOn)}\n            title={props.message.createdOn.toLocaleString()}\n            style={textStyle}\n          >\n            {time}:{' '}\n          </span>\n        )}\n        {props.message.message}\n      </div>\n    )\n  );\n}\n\nexport default React.memo(SystemChatBubble);\n","import * as React from 'react';\n\nexport interface BubbleGroupStyles {\n  bubbleGroupWrapper?: React.CSSProperties;\n}\n\nconst styles: BubbleGroupStyles = {\n  bubbleGroupWrapper: {\n    marginTop: 10,\n    marginBottom: 10,\n    position: 'relative',\n  },\n};\n\nexport default styles;\n\nexport { styles as defaultBubbleGroupStyles };\n","export interface BubbleGroupClasses {\r\n  chatBubbleWrapper?: string;\r\n}\r\n\r\nconst classes: BubbleGroupClasses = {\r\n  chatBubbleWrapper: 'react-bell-chat__bubble-group',\r\n};\r\n\r\nexport { classes as defaultBubbleGroupClasses };\r\n\r\nexport default classes;\r\n","import * as React from 'react';\nimport DefaultChatBubble, {\n  ChatBubbleProps,\n  ChatBubbleStyles,\n  MessageRenderProps,\n} from '../ChatBubble';\nimport DefaultSystemChatBubble from '../SystemChatBubble';\nimport bubbleGroupStyles, { BubbleGroupStyles } from './styles';\nimport { Message } from '../';\nimport { Author } from '../Author';\nimport Avatar, { AvatarProps, AvatarClasses } from '../Avatar';\nimport {\n  LastSeenAvatarProps,\n  LastSeenAvatarStyles,\n  LastSeenAvatarClasses,\n} from '../LastSeenAvatar';\nimport { AvatarStyles } from './../Avatar';\nimport classnames from 'classnames';\nimport { ChatBubbleClasses } from './../ChatBubble';\nimport defaultClasses, { BubbleGroupClasses } from './classes';\n\nexport * from './styles';\nexport * from './classes';\n\nexport interface BubbleGroupProps<T = string> {\n  yourAuthorId?: number;\n  messages: Message<T>[];\n  author: Author;\n  authors?: Author[];\n  showRecipientAvatar?: boolean;\n  bubblesCentered?: boolean;\n\n  classes?: BubbleGroupClasses;\n  chatBubbleClasses?: ChatBubbleClasses;\n  avatarClasses?: AvatarClasses;\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\n\n  styles?: BubbleGroupStyles;\n  chatBubbleStyles?: ChatBubbleStyles;\n  avatarStyles?: AvatarStyles;\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\n\n  CustomAvatar?: (props: AvatarProps) => JSX.Element;\n  CustomMessageRender?: (props: MessageRenderProps<T>) => JSX.Element | string;\n  CustomLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\n  CustomChatBubble?: (props: ChatBubbleProps<T>) => JSX.Element;\n  CustomSystemChatBubble?: (props: ChatBubbleProps<T>) => JSX.Element;\n  showRecipientLastSeenMessage?: boolean;\n}\n\nfunction BubbleGroup<T = string>(props: BubbleGroupProps<T>) {\n  const {\n    messages,\n    author,\n\n    CustomAvatar = Avatar,\n\n    styles,\n\n    bubblesCentered,\n\n    chatBubbleStyles,\n    lastSeenAvatarStyles,\n    avatarStyles,\n\n    classes,\n    chatBubbleClasses,\n    lastSeenAvatarClasses,\n    avatarClasses,\n\n    showRecipientAvatar,\n    CustomChatBubble,\n    CustomSystemChatBubble,\n    showRecipientLastSeenMessage,\n    CustomLastSeenAvatar,\n    CustomMessageRender,\n  } = props;\n  const ChatBubble = CustomChatBubble || DefaultChatBubble;\n  const SystemChatBubble = CustomSystemChatBubble || DefaultSystemChatBubble;\n\n  const messageNodes = messages.map((message, i) => {\n    const _props: ChatBubbleProps<T> = {\n      yourAuthorId: props.yourAuthorId,\n      author,\n      message,\n      bubblesCentered,\n\n      styles: chatBubbleStyles,\n      lastSeenAvatarStyles,\n\n      classes: chatBubbleClasses,\n      lastSeenAvatarClasses,\n\n      isFirstInGroup: i === 0,\n      isLastInGroup: i === messages.length - 1 && messages.length > 1,\n      isCenterInGroup: i < messages.length - 1 && messages.length > 1,\n      lastSeenByAuthors:\n        props.authors &&\n        props.authors.filter(\n          (a) =>\n            a.lastSeenMessageId !== undefined &&\n            a.lastSeenMessageId === message.id\n        ),\n      showRecipientLastSeenMessage,\n      CustomLastSeenAvatar,\n      CustomMessageRender,\n    };\n    return message.authorId !== undefined ? (\n      <ChatBubble key={i} {..._props} />\n    ) : (\n      <SystemChatBubble key={i} {..._props} />\n    );\n  });\n\n  const youAreAuthor = author && props.yourAuthorId === author.id;\n\n  return (\n    <div\n      style={{\n        ...bubbleGroupStyles.bubbleGroupWrapper,\n        ...styles?.bubbleGroupWrapper,\n      }}\n      className={classnames(\n        defaultClasses.chatBubbleWrapper,\n        classes?.chatBubbleWrapper\n      )}\n    >\n      {!youAreAuthor && showRecipientAvatar && author && CustomAvatar && (\n        <CustomAvatar\n          author={author}\n          styles={avatarStyles}\n          classes={avatarClasses}\n        />\n      )}\n      {messageNodes}\n    </div>\n  );\n}\n\nconst Memoized = React.memo(BubbleGroup);\nexport default Memoized;\nexport { Memoized as BubbleGroup };\n","export interface ChatMessagesContainerClasses {\r\n  root?: string;\r\n  showRecipientAvatar?: string;\r\n  showRecipientLastSeenMessage?: string;\r\n  showIsTyping?: string;\r\n}\r\n\r\nconst classes: ChatMessagesContainerClasses = {\r\n  root: 'react-bell-chat__chat-messages',\r\n  showRecipientAvatar: 'react-bell-chat__chat-messages--showRecipientAvatar',\r\n  showRecipientLastSeenMessage:\r\n    'react-bell-chat__chat-messages--showRecipientLastSeenMessage',\r\n  showIsTyping: 'react-bell-chat__chat-messages--showIsTyping',\r\n};\r\n\r\nexport { classes as DefaultChatMessagesContainerClasses };\r\n\r\nexport default classes;\r\n","export interface ChatMessagesContainerStyles {\r\n  root?: React.CSSProperties;\r\n  showRecipientAvatar?: React.CSSProperties;\r\n  showRecipientLastSeenMessage?: React.CSSProperties;\r\n  showIsTyping?: React.CSSProperties;\r\n}\r\n\r\nconst styles: ChatMessagesContainerStyles = {\r\n  root: {\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  showRecipientAvatar: {\r\n    paddingLeft: 50,\r\n  },\r\n  showIsTyping: {\r\n    paddingBottom: 24,\r\n    position: 'relative',\r\n  },\r\n  showRecipientLastSeenMessage: {\r\n    paddingRight: 30,\r\n  },\r\n};\r\n\r\nexport { styles as DefaultChatMessagesContainerStyles };\r\n\r\nexport default styles;\r\n","import * as classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport defaultClasses, { ChatMessagesContainerClasses } from './classes';\r\nimport defaultStyles, { ChatMessagesContainerStyles } from './styles';\r\nexport * from './classes';\r\nexport * from './styles';\r\n\r\nexport interface ChatMessagesContainerProps\r\n  extends React.PropsWithChildren<{\r\n    showRecipientLastSeenMessage: boolean;\r\n    showRecipientAvatar: boolean;\r\n    showIsTyping: boolean;\r\n    classes?: ChatMessagesContainerClasses;\r\n    styles?: ChatMessagesContainerStyles;\r\n  }> {}\r\n\r\nexport const ChatMessagesContainer: React.FC<ChatMessagesContainerProps> = (\r\n  props\r\n) => {\r\n  const {\r\n    children,\r\n    classes,\r\n    styles,\r\n    showIsTyping,\r\n    showRecipientAvatar,\r\n    showRecipientLastSeenMessage,\r\n  } = props;\r\n  const style = React.useMemo(\r\n    () => ({\r\n      ...defaultStyles?.root,\r\n      ...styles?.root,\r\n      ...(showRecipientAvatar && defaultStyles?.showRecipientAvatar),\r\n      ...(showRecipientAvatar && styles?.showRecipientAvatar),\r\n      ...(showIsTyping && defaultStyles?.showIsTyping),\r\n      ...(showIsTyping && styles?.showIsTyping),\r\n      ...(showRecipientLastSeenMessage &&\r\n        defaultStyles?.showRecipientLastSeenMessage),\r\n      ...(showRecipientLastSeenMessage && styles?.showRecipientLastSeenMessage),\r\n    }),\r\n    [\r\n      showIsTyping,\r\n      showRecipientAvatar,\r\n      showRecipientLastSeenMessage,\r\n      styles?.root,\r\n      styles?.showRecipientAvatar,\r\n      styles?.showIsTyping,\r\n      styles?.showRecipientLastSeenMessage,\r\n    ]\r\n  );\r\n  const className = classNames(defaultClasses.root, classes?.root, {\r\n    [defaultClasses?.showRecipientAvatar]: showRecipientAvatar,\r\n    [classes?.showRecipientAvatar]: showRecipientAvatar,\r\n    [defaultClasses?.showIsTyping]: showIsTyping,\r\n    [classes?.showIsTyping]: showIsTyping,\r\n    [defaultClasses?.showRecipientLastSeenMessage]: showRecipientLastSeenMessage,\r\n    [classes?.showRecipientLastSeenMessage]: showRecipientLastSeenMessage,\r\n  });\r\n\r\n  return (\r\n    <div style={style} className={className}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default ChatMessagesContainer;\r\n","const groupBy = <T>(\n  array: Array<T>,\n  groupingKeyFn: (item: T) => string\n): { [key: string]: Array<T> } => {\n  if (typeof groupingKeyFn !== 'function') {\n    throw new Error('groupBy take a function as only parameter');\n  }\n  return array.reduce((result, item) => {\n    const key = groupingKeyFn(item);\n    if (!result[key]) {\n      result[key] = [];\n    }\n    result[key].push(item);\n    return result;\n  }, {});\n};\nexport { groupBy };\n","export interface DateRowClasses {\r\n  container?: string;\r\n}\r\n\r\nconst classes: DateRowClasses = {\r\n  container: 'react-bell-chat__date-row',\r\n};\r\n\r\nexport { classes as DefaultDateRowClasses };\r\n\r\nexport default classes;\r\n","export interface DateRowStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nconst styles: DateRowStyles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    fontSize: 12,\r\n    color: 'rgba(0, 0, 0, 0.55)',\r\n  },\r\n};\r\n\r\nexport { styles as DefaultDateRowStyles };\r\n\r\nexport default styles;\r\n","import * as React from 'react';\nimport classnames from 'classnames';\nimport defaultClasses, { DateRowClasses } from './classes';\nimport defaultStyles, { DateRowStyles } from './styles';\nexport * from './classes';\nexport * from './styles';\n\nexport interface DateRowProps {\n  date: Date;\n  styles?: DateRowStyles;\n  classes?: DateRowClasses;\n}\n\nconst DateRow: React.FC<DateRowProps> = (props) => {\n  let { styles, classes } = props;\n  const style = React.useMemo(\n    () => ({\n      ...defaultStyles.container,\n      ...styles?.container,\n    }),\n    [styles?.container]\n  );\n  return (\n    props.date && (\n      <div\n        className={classnames(defaultClasses.container, classes?.container)}\n        style={style}\n        title={props.date.toLocaleDateString([], {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n        })}\n      >\n        {props.date.toLocaleDateString()}\n      </div>\n    )\n  );\n};\n\nexport default React.memo(DateRow);\n","export interface LoadingMessagesStyle {\r\n  container?: React.CSSProperties;\r\n  spinnerColor?: string;\r\n}\r\n\r\nconst styles: LoadingMessagesStyle = {\r\n  container: {\r\n    display: 'flex',\r\n    marginBottom: 10,\r\n  },\r\n  spinnerColor: 'rgb(0, 132, 255)',\r\n};\r\n\r\nexport { styles as DefaultLoadingMessagesStyle };\r\n\r\nexport default styles;\r\n","export interface LoadingMessagesClasses {\r\n  container?: string;\r\n}\r\n\r\nconst classes: LoadingMessagesClasses = {\r\n  container: 'react-bell-chat__loading-messages',\r\n};\r\n\r\nexport { classes as DefaultLoadingMessagesClasses };\r\n\r\nexport default classes;\r\n","import * as React from 'react';\nimport classnames from 'classnames';\nimport defaultStyles, { LoadingMessagesStyle } from './styles';\nimport defaultClasses, { LoadingMessagesClasses } from './classes';\nexport * from './classes';\nexport * from './styles';\n\nexport interface LoadingMessagesProps {\n  styles?: LoadingMessagesStyle;\n  classes?: LoadingMessagesClasses;\n  className?: string;\n  isVisible: boolean;\n}\n\nconst LoadingMessages: React.FC<LoadingMessagesProps> = (props) => {\n  const { styles, classes } = props;\n\n  const style = React.useMemo(\n    () => ({\n      ...defaultStyles.container,\n      ...styles?.container,\n    }),\n    [styles?.container]\n  );\n\n  const svgStyle = React.useMemo(\n    () => ({\n      background: 'none',\n      margin: 'auto',\n      fill: styles?.spinnerColor ?? defaultStyles.spinnerColor,\n      opacity: props.isVisible ? 1 : 0,\n      transition: '0.3s all ease-in-out',\n    }),\n    [styles?.spinnerColor]\n  );\n  return (\n    <div\n      className={classnames(\n        defaultClasses.container,\n        props.className,\n        classes?.container\n      )}\n      style={style}\n    >\n      <svg\n        width=\"40px\"\n        height=\"40px\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 100 100\"\n        preserveAspectRatio=\"xMidYMid\"\n        style={svgStyle}\n      >\n        <path\n          stroke=\"none\"\n          d=\"M10 50A40 40 0 0 0 90 50A40 46 0 0 1 10 50\"\n          transform=\"rotate(42 50 53)\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            calcMode=\"linear\"\n            values=\"0 50 53;360 50 53\"\n            keyTimes=\"0;1\"\n            dur=\"1s\"\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n      </svg>\n    </div>\n  );\n};\n\nexport default React.memo(LoadingMessages);\n","import * as React from 'react';\n\nexport interface ChatFeedStyles {\n  chatPanel?: React.CSSProperties;\n  showRecipientAvatarChatMessages?: React.CSSProperties;\n  showRecipientLastSeenMessageChatMessages?: React.CSSProperties;\n  showIsTypingChatMessages?: React.CSSProperties;\n}\n\nconst styles: ChatFeedStyles = {\n  chatPanel: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n    position: 'relative',\n  },\n};\n\nexport { styles as DefaultChatFeedStyles };\n\nexport default styles;\n","export interface ChatFeedClasses {\r\n  chatPanel?: string;\r\n}\r\n\r\nconst classes: ChatFeedClasses = {\r\n  chatPanel: 'react-bell-chat__chat-panel',\r\n};\r\n\r\nexport { classes as DefaultChatFeedClasses };\r\n\r\nexport default classes;\r\n","// Copyright 2017 Brandon Mowat\n// Written, developed, and designed by Brandon Mowat for the purpose of helping\n// other developers make chat interfaces.\n\nimport * as React from 'react';\nimport BubbleGroup, {\n  BubbleGroupClasses,\n  BubbleGroupStyles,\n} from '../BubbleGroup';\nimport DefaultChatBubble, {\n  ChatBubbleProps,\n  MessageRenderProps,\n} from '../ChatBubble';\nimport Message from '../Message';\nimport { Author } from '../Author';\nimport { ChatBubbleStyles, ChatBubbleClasses } from '../ChatBubble';\nimport Avatar, { AvatarProps, AvatarStyles, AvatarClasses } from '../Avatar';\nimport IsTyping, { IsTypingStyles, IsTypingClasses } from '../IsTyping';\nimport ChatScrollArea, {\n  ChatScrollAreaProps,\n  ChatScrollAreaApi,\n  ChatScrollAreaStyles,\n  ChatScrollAreaClasses,\n} from '../ChatScrollArea';\nimport ChatMessagesContainer, {\n  ChatMessagesContainerProps,\n  ChatMessagesContainerClasses,\n  ChatMessagesContainerStyles,\n} from '../ChatMessagesContainer';\nimport LastSeenAvatar, {\n  LastSeenAvatarProps,\n  LastSeenAvatarStyles,\n  LastSeenAvatarClasses,\n} from '../LastSeenAvatar';\nimport { groupBy } from '../utils/utils';\nimport DateRow, {\n  DateRowProps,\n  DateRowStyles,\n  DateRowClasses,\n} from '../DateRow';\nimport LoadingMessages, {\n  LoadingMessagesProps,\n  LoadingMessagesStyle,\n  LoadingMessagesClasses,\n} from '../LoadingMessages';\nimport SystemChatBubble from '../SystemChatBubble';\nimport classnames from 'classnames';\nimport chatStyles, { ChatFeedStyles } from './styles';\nimport defaultClasses, { ChatFeedClasses } from './classes';\n\nexport * from './classes';\nexport * from './styles';\n\n// Model for ChatFeed props.\n\nexport interface ChatFeedProps<T = string> {\n  // Structural props\n  className?: string;\n\n  // Functional props\n  messages: Message<T>[];\n  authors: Author[];\n  yourAuthorId: number;\n  hasOldMessages?: boolean;\n  loadOldMessagesThreshold?: number;\n\n  // Visual props\n  bubblesCentered?: boolean;\n  maxHeight?: string | number;\n  minHeight?: string | number;\n\n  // Switches\n  showDateRow?: boolean;\n  showRecipientAvatar?: boolean;\n  showRecipientLastSeenMessage?: boolean;\n  showIsTyping?: boolean;\n  showLoadingMessages?: boolean;\n\n  // Custom components\n  CustomLoadingMessages?: (props: LoadingMessagesProps) => JSX.Element;\n  CustomChatBubble?: (props: ChatBubbleProps<T>) => JSX.Element;\n  CustomSystemChatBubble?: (props: ChatBubbleProps<T>) => JSX.Element;\n  CustomAvatar?: (props: AvatarProps) => JSX.Element;\n  CustomScrollArea?: (props: ChatScrollAreaProps) => JSX.Element;\n  CustomChatMessagesContainer?: (\n    props: ChatMessagesContainerProps\n  ) => JSX.Element;\n  CustomIsTyping?: (props: ChatScrollAreaProps) => JSX.Element;\n  CustomLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\n  CustomMessageRender?: (props: MessageRenderProps<T>) => JSX.Element | string;\n  CustomDateRow?: (props: DateRowProps) => JSX.Element;\n\n  // Callbacks\n  onLoadOldMessages?: () => Promise<void>;\n\n  // Styles\n  style?: React.CSSProperties;\n  styles?: ChatFeedStyles;\n  bubbleGroupStyles?: BubbleGroupStyles;\n  chatBubbleStyles?: ChatBubbleStyles;\n  chatScrollAreaStyles?: ChatScrollAreaStyles;\n  chatMessagesContainerStyles?: ChatMessagesContainerStyles;\n  avatarStyles?: AvatarStyles;\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\n  dateRowStyles?: DateRowStyles;\n  loadingMessagesStyle?: LoadingMessagesStyle;\n  isTypingStyles?: IsTypingStyles;\n  chatFeedStyles?: ChatFeedStyles;\n\n  // Classes\n  classes?: ChatFeedClasses;\n  chatBubbleClasses?: ChatBubbleClasses;\n  bubbleGroupClasses?: BubbleGroupClasses;\n  chatScrollAreaClasses?: ChatScrollAreaClasses;\n  chatMessagesContainerClasses?: ChatMessagesContainerClasses;\n  avatarClasses?: AvatarClasses;\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\n  dateRowClasses?: DateRowClasses;\n  loadingMessagesClasses?: LoadingMessagesClasses;\n  isTypingClasses?: IsTypingClasses;\n  chatFeedClasses?: ChatFeedStyles;\n}\n\nexport interface ChatFeedState {\n  isLoadingMessages: boolean;\n}\n\nexport interface ChatFeedApi {\n  onMessageSend: () => void;\n  scrollApi: ChatScrollAreaApi;\n}\n\nfunction DefaultChatBubbleFunc<T>(props: ChatBubbleProps<T>) {\n  return <DefaultChatBubble<T> {...props} />;\n}\nfunction DefaultScrollAreaFunc(props: ChatScrollAreaProps) {\n  return <ChatScrollArea {...props} />;\n}\nfunction DefaultMessageRenderFunc<T>(props: MessageRenderProps<T>) {\n  return props.message && props.message.message;\n}\n\nexport interface ChatFeedSnapshot {\n  wasScrolledToBottom: boolean;\n  scrollHeight: number;\n  clientHeight: number;\n}\n\n// React component to render a complete chat feed\nexport class ChatFeed<T = string>\n  extends React.PureComponent<ChatFeedProps<T>, ChatFeedState>\n  implements ChatFeedApi {\n  public static defaultProps: ChatFeedProps = {\n    messages: [],\n    authors: [],\n    CustomChatBubble: DefaultChatBubbleFunc,\n    CustomMessageRender: DefaultMessageRenderFunc,\n    CustomAvatar: Avatar,\n    CustomScrollArea: DefaultScrollAreaFunc,\n    CustomChatMessagesContainer: ChatMessagesContainer,\n    CustomLastSeenAvatar: LastSeenAvatar,\n    CustomDateRow: DateRow,\n    CustomLoadingMessages: LoadingMessages,\n    yourAuthorId: 0,\n    loadOldMessagesThreshold: 50,\n    CustomSystemChatBubble: SystemChatBubble,\n  };\n\n  public scrollApi: ChatScrollAreaApi;\n\n  constructor(props: ChatFeedProps<T>) {\n    super(props);\n    this.onLoadOldMessages = this.onLoadOldMessages.bind(this);\n    this.apiRef = this.apiRef.bind(this);\n    this.state = {\n      isLoadingMessages: false,\n    };\n  }\n\n  public onMessageSend() {\n    this.scrollApi && this.scrollApi.scrollToBottom();\n  }\n\n  componentDidMount() {\n    this.scrollApi && this.scrollApi.scrollToBottom();\n  }\n\n  getSnapshotBeforeUpdate(\n    prevProps: ChatFeedProps<T>,\n    prevState: ChatFeedState\n  ) {\n    const wasScrolledToBottom =\n      this.scrollApi && this.scrollApi.scrolledToBottom();\n    const scrollHeight = this.scrollApi && this.scrollApi.scrollHeight();\n    const clientHeight = this.scrollApi && this.scrollApi.clientHeight();\n\n    return {\n      wasScrolledToBottom,\n      scrollHeight,\n      clientHeight,\n    };\n  }\n\n  componentDidUpdate(\n    prevProps: ChatFeedProps<T>,\n    prevState: ChatFeedState,\n    snapshot: ChatFeedSnapshot\n  ) {\n    if (\n      this.props.messages.length !== prevProps.messages.length &&\n      snapshot &&\n      snapshot.wasScrolledToBottom\n    ) {\n      this.scrollApi.scrollToBottom();\n    } else if (\n      this.props.messages.length !== prevProps.messages.length &&\n      snapshot &&\n      prevState.isLoadingMessages\n    ) {\n      const scrollHeight = this.scrollApi && this.scrollApi.scrollHeight();\n      this.scrollApi.scrollTo(scrollHeight - snapshot.scrollHeight);\n    }\n  }\n\n  /**\n   * Determines what type of message/messages to render.\n   */\n  renderMessages<T>(messages: Message<T>[]) {\n    let { styles } = this.props;\n    if (!styles) {\n      styles = {};\n    }\n    const {\n      chatBubbleStyles,\n      chatBubbleClasses,\n      dateRowStyles,\n      dateRowClasses,\n      avatarStyles,\n      avatarClasses,\n      lastSeenAvatarStyles,\n      lastSeenAvatarClasses,\n      bubbleGroupStyles,\n      bubbleGroupClasses,\n    } = this.props;\n    const { CustomChatBubble, showRecipientAvatar } = this.props;\n\n    // First group by days\n    const groups = groupBy(\n      messages,\n      (item) => item.createdOn && item.createdOn.toDateString()\n    );\n    let messageNodes: JSX.Element[] = [];\n    let jsxKey = 0;\n    Object.keys(groups).forEach((key) => {\n      let group = [];\n      const messagesGroup = groups[key];\n      if (\n        messagesGroup[0] &&\n        messagesGroup[0].createdOn &&\n        this.props.showDateRow\n      ) {\n        messageNodes.push(\n          <this.props.CustomDateRow\n            key={key}\n            date={messagesGroup[0].createdOn}\n            styles={dateRowStyles}\n            classes={dateRowClasses}\n          />\n        );\n      }\n      messageNodes = messageNodes.concat(\n        messagesGroup.map((message, index) => {\n          group.push(message);\n          // Find diff in message type or no more messages\n          if (\n            !messagesGroup[index + 1] ||\n            messagesGroup[index + 1].authorId !== message.authorId\n          ) {\n            const messageGroup = group;\n            const author =\n              this.props.authors &&\n              this.props.authors.filter((a) => a.id === message.authorId)[0];\n            group = [];\n            jsxKey++;\n            return (\n              <BubbleGroup\n                key={jsxKey}\n                yourAuthorId={this.props.yourAuthorId}\n                messages={messageGroup}\n                author={author}\n                authors={this.props.authors}\n                showRecipientAvatar={showRecipientAvatar}\n                CustomChatBubble={CustomChatBubble}\n                chatBubbleStyles={chatBubbleStyles}\n                chatBubbleClasses={chatBubbleClasses}\n                avatarStyles={avatarStyles}\n                avatarClasses={avatarClasses}\n                lastSeenAvatarStyles={lastSeenAvatarStyles}\n                lastSeenAvatarClasses={lastSeenAvatarClasses}\n                showRecipientLastSeenMessage={\n                  this.props.showRecipientLastSeenMessage\n                }\n                CustomAvatar={this.props.CustomAvatar}\n                CustomLastSeenAvatar={this.props.CustomLastSeenAvatar}\n                CustomMessageRender={this.props.CustomMessageRender}\n                CustomSystemChatBubble={this.props.CustomSystemChatBubble}\n                classes={bubbleGroupClasses}\n                styles={bubbleGroupStyles}\n              />\n            );\n          }\n          return null;\n        })\n      );\n    });\n    return messageNodes;\n  }\n\n  renderIsTyping() {\n    let { styles } = this.props;\n    if (!styles) {\n      styles = {};\n    }\n    const { isTypingStyles, isTypingClasses } = this.props;\n    const typingAuthors =\n      this.props.authors &&\n      this.props.authors.filter(\n        (a) => a.isTyping && a.id !== this.props.yourAuthorId\n      );\n    if (!typingAuthors || typingAuthors.length === 0) {\n      return null;\n    }\n    return (\n      <IsTyping\n        typingAuthors={typingAuthors}\n        styles={isTypingStyles}\n        classes={isTypingClasses}\n      />\n    );\n  }\n\n  apiRef(e: ChatScrollAreaApi) {\n    if (!this.scrollApi) {\n      e.scrollToBottom();\n    }\n    this.scrollApi = e;\n  }\n\n  /**\n   * render : renders our chat feed\n   */\n  render() {\n    let { styles, classes } = this.props;\n    if (!styles) {\n      styles = {};\n    }\n    if (!classes) {\n      classes = {};\n    }\n    const {\n      loadingMessagesStyle,\n      chatFeedStyles,\n      chatScrollAreaStyles,\n      loadingMessagesClasses,\n      chatScrollAreaClasses,\n    } = this.props;\n\n    return (\n      <div\n        className={classnames(\n          defaultClasses.chatPanel,\n          this.props.className,\n          classes?.chatPanel\n        )}\n        style={{\n          ...chatStyles.chatPanel,\n          ...(chatFeedStyles && chatFeedStyles.chatPanel),\n          ...this.props.style,\n        }}\n      >\n        <this.props.CustomScrollArea\n          minHeight={this.props.minHeight}\n          maxHeight={this.props.maxHeight}\n          apiRef={this.apiRef}\n          loadOldMessagesThreshold={this.props.loadOldMessagesThreshold}\n          onLoadOldMessages={this.onLoadOldMessages}\n          styles={chatScrollAreaStyles}\n          classes={chatScrollAreaClasses}\n        >\n          <this.props.CustomChatMessagesContainer\n            classes={this.props.chatMessagesContainerClasses}\n            styles={this.props.chatMessagesContainerStyles}\n            showIsTyping={this.props.showIsTyping}\n            showRecipientAvatar={this.props.showRecipientAvatar}\n            showRecipientLastSeenMessage={\n              this.props.showRecipientLastSeenMessage\n            }\n          >\n            {\n              <this.props.CustomLoadingMessages\n                isVisible={\n                  this.props.showLoadingMessages || this.state.isLoadingMessages\n                }\n                styles={loadingMessagesStyle}\n                classes={loadingMessagesClasses}\n              />\n            }\n            {this.renderMessages<T>(this.props.messages)}\n            {this.props.showIsTyping && this.renderIsTyping()}\n          </this.props.CustomChatMessagesContainer>\n        </this.props.CustomScrollArea>\n      </div>\n    );\n  }\n\n  private onLoadOldMessages() {\n    if (!this.state.isLoadingMessages && this.props.hasOldMessages) {\n      return new Promise<void>((resolve) => {\n        this.setState(\n          {\n            isLoadingMessages: true,\n          },\n          () => resolve()\n        );\n      })\n        .then(async () => {\n          if (this.props.onLoadOldMessages) {\n            await this.props.onLoadOldMessages();\n          }\n        })\n        .then(async () => {\n          await new Promise<void>((resolve) => {\n            this.setState(\n              {\n                isLoadingMessages: false,\n              },\n              () => {\n                if (this.scrollApi.scrolledToLoadThreshold()) {\n                  this.scrollApi.scrollTo(\n                    this.props.loadOldMessagesThreshold + 1\n                  );\n                }\n                resolve();\n              }\n            );\n          });\n        });\n    }\n  }\n}\n"],"sourceRoot":""}