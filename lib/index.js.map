{"version":3,"sources":["..\\react-bell-chat\\webpack/universalModuleDefinition","..\\react-bell-chat\\./node_modules/classnames/index.js","..\\react-bell-chat\\external \"react\"","..\\react-bell-chat\\webpack/bootstrap","..\\react-bell-chat\\webpack/runtime/compat get default export","..\\react-bell-chat\\webpack/runtime/define property getters","..\\react-bell-chat\\webpack/runtime/hasOwnProperty shorthand","..\\react-bell-chat\\webpack/runtime/make namespace object","..\\react-bell-chat\\./src/lib/ChatBubble/styles.ts","..\\react-bell-chat\\./src/lib/ChatBubble/classes.ts","..\\react-bell-chat\\./src/lib/ChatBubble/config.ts","..\\react-bell-chat\\./src/lib/ChatBubble/index.tsx","..\\react-bell-chat\\./src/lib/Avatar/styles.ts","..\\react-bell-chat\\./src/lib/ChatScrollArea/index.tsx","..\\react-bell-chat\\./src/lib/Avatar/classes.ts","..\\react-bell-chat\\./src/lib/Avatar/index.tsx","..\\react-bell-chat\\./src/lib/IsTyping/classes.ts","..\\react-bell-chat\\./src/lib/IsTyping/styles.ts","..\\react-bell-chat\\./src/lib/IsTyping/index.tsx","..\\react-bell-chat\\./src/lib/ChatScrollArea/styles.ts","..\\react-bell-chat\\./src/lib/ChatScrollArea/classes.ts","..\\react-bell-chat\\./src/lib/LastSeenAvatar/classes.ts","..\\react-bell-chat\\./src/lib/LastSeenAvatar/styles.ts","..\\react-bell-chat\\./src/lib/LastSeenAvatar/index.tsx","..\\react-bell-chat\\./src/lib/BubbleGroup/classes.ts","..\\react-bell-chat\\./src/lib/BubbleGroup/styles.ts","..\\react-bell-chat\\./src/lib/BubbleGroup/index.tsx","..\\react-bell-chat\\./src/lib/ChatMessagesContainer/classes.ts","..\\react-bell-chat\\./src/lib/ChatMessagesContainer/styles.ts","..\\react-bell-chat\\./src/lib/ChatMessagesContainer/index.tsx","..\\react-bell-chat\\./src/lib/DateRow/classes.ts","..\\react-bell-chat\\./src/lib/DateRow/styles.ts","..\\react-bell-chat\\./src/lib/DateRow/index.tsx","..\\react-bell-chat\\./src/lib/LoadingMessages/styles.ts","..\\react-bell-chat\\./src/lib/LoadingMessages/classes.ts","..\\react-bell-chat\\./src/lib/LoadingMessages/index.tsx","..\\react-bell-chat\\./src/lib/SystemChatBubble/classes.ts","..\\react-bell-chat\\./src/lib/SystemChatBubble/styles.ts","..\\react-bell-chat\\./src/lib/SystemChatBubble/index.tsx","..\\react-bell-chat\\./src/lib/ChatFeed/styles.ts","..\\react-bell-chat\\./src/lib/ChatFeed/classes.ts","..\\react-bell-chat\\./src/lib/ChatFeed/index.tsx","..\\react-bell-chat\\./src/lib/utils/utils.ts"],"names":["root","factory","exports","module","require","define","amd","i","a","self","__WEBPACK_EXTERNAL_MODULE__297__","hasOwn","hasOwnProperty","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","r","Symbol","toStringTag","value","chatBubbleWrapper","position","marginBottom","display","chatBubble","borderRadius","marginRight","marginLeft","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","userChatBubbleOrientationNormal","recipientChatBubbleOrientationNormal","recipientChatBubble","text","fontSize","fontWeight","margin","whiteSpace","userFirstChatBubbleInGroup","borderTopRightRadius","recipientFirstChatBubbleInGroup","borderTopLeftRadius","userLastChatBubbleInGroup","recipientLastChatBubbleInGroup","userCenterChatBubbleInGroup","borderBottomRightRadius","recipientCenterChatBubbleInGroup","borderBottomLeftRadius","createdOn","right","bottom","opacity","isSend","lastSeenByContainer","top","width","height","loadingSpinnerColor","isSendIconColor","userChatBubble","userText","recipientText","userCreatedOn","recipientCreatedOn","formatTime","date","toLocaleTimeString","hour","minute","hour12","ChatBubble","props","message","lastSeenAvatarStyles","yourAuthorId","lastSeenAvatarClasses","styles","config","finalConfig","firstChatBubbleInGroup","centerChatBubbleInGroup","lastChatBubbleInGroup","youAreAuthor","authorId","finalChatBubbleStyles","isFirstInGroup","isCenterInGroup","isLastInGroup","messageStyle","messageClassName","isMouseOverLastSeenContainer","setIsMouseOverLastSeenContainer","onMouseEnterLastSeenContainer","onMouseLeaveLastSeenContainer","style","className","CustomMessageRender","title","toLocaleString","xmlns","viewBox","preserveAspectRatio","background","fill","stroke","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","showRecipientLastSeenMessage","lastSeenByAuthors","CustomLastSeenAvatar","onMouseEnter","onMouseLeave","map","author","index","mouseOver","container","left","lineHeight","textAlign","pointerEvents","Memoized","bgImageUrl","backgroundImage","backgroundSize","name","avatarName","split","part","toUpperCase","substr","color","typingAuthors","replace","overflow","padding","flexDirection","render","this","ref","containerRef","maxHeight","minHeight","onScroll","children","scrollContainer","scrollTop","loadOldMessagesThreshold","onLoadOldMessages","apiRef","scrollToBottom","behavior","scrollTo","scrollHeight","scrolledToBottom","clientHeight","scrolledToLoadThreshold","bind","transition","marginTop","textStyle","lastSeenAvatarName","bubbleGroupWrapper","messages","CustomAvatar","bubblesCentered","chatBubbleStyles","avatarStyles","chatBubbleClasses","avatarClasses","showRecipientAvatar","CustomChatBubble","CustomSystemChatBubble","messageNodes","_props","authors","filter","lastSeenMessageId","id","showIsTyping","flex","justifyContent","ChatMessagesContainer","toLocaleDateString","weekday","year","month","day","spinnerColor","svgStyle","isVisible","systemChatBubbleContainer","time","systemChatBubbleText","chatPanel","flexGrow","DefaultMessageRenderFunc","onMessageSend","scrollApi","componentDidMount","getSnapshotBeforeUpdate","prevProps","prevState","wasScrolledToBottom","componentDidUpdate","snapshot","isLoadingMessages","renderMessages","dateRowStyles","dateRowClasses","bubbleGroupStyles","bubbleGroupClasses","groups","array","groupingKeyFn","Error","reduce","result","item","groupBy","toDateString","jsxKey","keys","forEach","group","messagesGroup","showDateRow","CustomDateRow","concat","messageGroup","CustomBubbleGroup","renderIsTyping","isTypingStyles","isTypingClasses","isTyping","CustomIsTyping","e","loadingMessagesStyle","chatFeedStyles","chatScrollAreaStyles","loadingMessagesClasses","chatScrollAreaClasses","CustomScrollArea","CustomChatMessagesContainer","chatMessagesContainerClasses","chatMessagesContainerStyles","CustomLoadingMessages","showLoadingMessages","state","hasOldMessages","Promise","resolve","setState","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__297__) {\nreturn ","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = __WEBPACK_EXTERNAL_MODULE__297__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as React from 'react';\n\nexport interface ChatBubbleStyles {\n  chatBubbleWrapper?: React.CSSProperties;\n  chatBubble?: React.CSSProperties;\n  systemChatBubbleContainer?: React.CSSProperties;\n  systemChatBubbleText?: React.CSSProperties;\n  userChatBubbleOrientationNormal?: React.CSSProperties;\n  recipientChatBubbleOrientationNormal?: React.CSSProperties;\n  text?: React.CSSProperties;\n  userText?: React.CSSProperties;\n  recipientText?: React.CSSProperties;\n  userChatBubble?: React.CSSProperties;\n  recipientChatBubble?: React.CSSProperties;\n  firstChatBubbleInGroup?: React.CSSProperties;\n  userFirstChatBubbleInGroup?: React.CSSProperties;\n  recipientFirstChatBubbleInGroup?: React.CSSProperties;\n  lastChatBubbleInGroup?: React.CSSProperties;\n  userLastChatBubbleInGroup?: React.CSSProperties;\n  recipientLastChatBubbleInGroup?: React.CSSProperties;\n  centerChatBubbleInGroup?: React.CSSProperties;\n  userCenterChatBubbleInGroup?: React.CSSProperties;\n  recipientCenterChatBubbleInGroup?: React.CSSProperties;\n  createdOn?: React.CSSProperties;\n  recipientCreatedOn?: React.CSSProperties;\n  userCreatedOn?: React.CSSProperties;\n  isSend?: React.CSSProperties;\n\n  lastSeenByContainer?: React.CSSProperties;\n  loadingSpinnerColor?: string;\n  isSendIconColor?: string;\n}\n\nconst styles: ChatBubbleStyles = {\n  chatBubbleWrapper: {\n    position: 'relative',\n    marginBottom: 2,\n    display: 'flex',\n  } as React.CSSProperties,\n  chatBubble: {\n    position: 'relative',\n    borderRadius: 7,\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    maxWidth: '80%',\n    paddingTop: 8,\n    paddingBottom: 14,\n    paddingLeft: 14,\n    paddingRight: 14,\n  } as React.CSSProperties,\n  userChatBubbleOrientationNormal: {\n    marginRight: 0,\n  } as React.CSSProperties,\n  recipientChatBubbleOrientationNormal: {\n    marginLeft: 0,\n  } as React.CSSProperties,\n  recipientChatBubble: {} as React.CSSProperties,\n  text: {\n    fontSize: 16,\n    fontWeight: 300,\n    margin: 0,\n    marginRight: 30,\n    whiteSpace: 'pre',\n  } as React.CSSProperties,\n  userFirstChatBubbleInGroup: {\n    borderTopRightRadius: 0,\n  } as React.CSSProperties,\n  recipientFirstChatBubbleInGroup: {\n    borderTopLeftRadius: 0,\n  } as React.CSSProperties,\n  userLastChatBubbleInGroup: {\n    borderTopRightRadius: 0,\n  } as React.CSSProperties,\n  recipientLastChatBubbleInGroup: {\n    borderTopLeftRadius: 0,\n  } as React.CSSProperties,\n  userCenterChatBubbleInGroup: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  } as React.CSSProperties,\n  recipientCenterChatBubbleInGroup: {\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n  } as React.CSSProperties,\n  createdOn: {\n    position: 'absolute',\n    right: 14,\n    bottom: 2,\n    fontSize: 9,\n    opacity: 0.5,\n  } as React.CSSProperties,\n  isSend: {\n    position: 'absolute',\n    right: 2,\n    bottom: 1,\n    fontSize: 9,\n    opacity: 0.5,\n  } as React.CSSProperties,\n  lastSeenByContainer: {\n    position: 'absolute',\n    right: -30,\n    top: 0,\n    width: 20,\n    height: '100%',\n  } as React.CSSProperties,\n  loadingSpinnerColor: 'currentColor',\n  isSendIconColor: 'currentColor',\n};\n\nexport { styles as defaultChatBubbleStyles };\n","export interface ChatBubbleClasses {\r\n  chatBubbleWrapper?: string;\r\n  chatBubble?: string;\r\n  systemChatBubbleContainer?: string;\r\n  systemChatBubbleText?: string;\r\n  userChatBubbleOrientationNormal?: string;\r\n  recipientChatBubbleOrientationNormal?: string;\r\n  text?: string;\r\n  userText?: string;\r\n  recipientText?: string;\r\n  userChatBubble?: string;\r\n  recipientChatBubble?: string;\r\n  firstChatBubbleInGroup?: string;\r\n  userFirstChatBubbleInGroup?: string;\r\n  recipientFirstChatBubbleInGroup?: string;\r\n  lastChatBubbleInGroup?: string;\r\n  userLastChatBubbleInGroup?: string;\r\n  recipientLastChatBubbleInGroup?: string;\r\n  centerChatBubbleInGroup?: string;\r\n  userCenterChatBubbleInGroup?: string;\r\n  recipientCenterChatBubbleInGroup?: string;\r\n  createdOn?: string;\r\n  recipientCreatedOn?: string;\r\n  userCreatedOn?: string;\r\n  isSend?: string;\r\n\r\n  lastSeenByContainer?: string;\r\n}\r\n\r\nconst classes: ChatBubbleClasses = {\r\n  chatBubbleWrapper: 'react-bell-chat__chat-bubble__wrapper',\r\n\r\n  isSend: 'react-bell-chat__chat-bubble__is-send',\r\n\r\n  chatBubble: 'react-bell-chat__chat-bubble',\r\n  userChatBubble: 'react-bell-chat__chat-bubble--user',\r\n  recipientChatBubble: 'react-bell-chat__chat-bubble--recipient',\r\n\r\n  text: 'react-bell-chat__chat-bubble__text',\r\n  userText: 'react-bell-chat__chat-bubble__text--user',\r\n  recipientText: 'react-bell-chat__chat-bubble__text--recipient',\r\n\r\n  createdOn: 'react-bell-chat__chat-bubble__created-on',\r\n  userCreatedOn: 'react-bell-chat__chat-bubble__created-on--user',\r\n  recipientCreatedOn: 'react-bell-chat__chat-bubble__created-on--recipient',\r\n\r\n  lastSeenByContainer: 'react-bell-chat__chat-bubble__last-seen-by__container',\r\n};\r\n\r\nexport { classes as defaultChatBubbleClasses };\r\n","export interface ChatBubbleConfig {\r\n  formatTime?: (date: Date) => string;\r\n}\r\n\r\nconst config: ChatBubbleConfig = {\r\n  formatTime: (date) =>\r\n    date?.toLocaleTimeString([], {\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: true,\r\n    }),\r\n};\r\n\r\nexport { config as defaultChatBubbleConfig };\r\n","import * as React from 'react';\nimport { Message } from '../Message';\nimport { Author } from '../Author';\nimport {\n  LastSeenAvatarProps,\n  LastSeenAvatarStyles,\n  LastSeenAvatarClasses,\n} from './../LastSeenAvatar';\nimport classnames from 'classnames';\nimport { ChatBubbleStyles, defaultChatBubbleStyles } from './styles';\nimport { ChatBubbleClasses, defaultChatBubbleClasses } from './classes';\nimport { ComponentType } from '../utils/componentType';\nimport { ChatBubbleConfig, defaultChatBubbleConfig } from './config';\n\nexport * from './styles';\nexport * from './classes';\nexport * from './config';\n\nexport interface MessageRenderProps<T = string> {\n  message: Message<T>;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport interface ChatBubbleProps<T = string> {\n  message: Message<T>;\n  author?: Author;\n\n  config?: ChatBubbleConfig;\n\n  styles?: ChatBubbleStyles;\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\n\n  classes?: ChatBubbleClasses;\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\n\n  bubblesCentered?: boolean;\n  yourAuthorId: number;\n  isFirstInGroup?: boolean;\n  isLastInGroup?: boolean;\n  isCenterInGroup?: boolean;\n  lastSeenByAuthors?: Author[];\n  showRecipientLastSeenMessage?: boolean;\n  CustomLastSeenAvatar?: ComponentType<LastSeenAvatarProps>;\n  CustomMessageRender?: ComponentType<MessageRenderProps<T>>;\n}\n\nexport function ChatBubble<T = string>(props: ChatBubbleProps<T>) {\n  if (!props.message) {\n    return null;\n  }\n\n  const {\n    lastSeenAvatarStyles,\n    yourAuthorId,\n    lastSeenAvatarClasses,\n    styles,\n    classes,\n    config,\n  } = props;\n\n  const finalConfig = {\n    ...defaultChatBubbleConfig,\n    ...config,\n  };\n\n  const {\n    userChatBubble,\n    chatBubble,\n    text,\n    userText,\n    recipientText,\n    recipientChatBubble,\n    firstChatBubbleInGroup,\n    userFirstChatBubbleInGroup,\n    recipientFirstChatBubbleInGroup,\n    centerChatBubbleInGroup,\n    userCenterChatBubbleInGroup,\n    recipientCenterChatBubbleInGroup,\n    lastChatBubbleInGroup,\n    userLastChatBubbleInGroup,\n    recipientLastChatBubbleInGroup,\n    userChatBubbleOrientationNormal,\n    recipientChatBubbleOrientationNormal,\n    chatBubbleWrapper,\n    createdOn,\n    userCreatedOn,\n    recipientCreatedOn,\n    isSendIconColor,\n    loadingSpinnerColor,\n    lastSeenByContainer,\n  } = styles ?? {};\n  const youAreAuthor = props.message.authorId === yourAuthorId;\n\n  // message.id 0 is reserved for blue\n  const finalChatBubbleStyles: React.CSSProperties = {\n    ...defaultChatBubbleStyles.chatBubble,\n    ...chatBubble,\n    ...(youAreAuthor\n      ? defaultChatBubbleStyles.userChatBubble\n      : defaultChatBubbleStyles.recipientChatBubble),\n    ...(youAreAuthor ? userChatBubble : recipientChatBubble),\n    ...(youAreAuthor\n      ? defaultChatBubbleStyles.userChatBubbleOrientationNormal\n      : defaultChatBubbleStyles.recipientChatBubbleOrientationNormal),\n    ...(youAreAuthor\n      ? userChatBubbleOrientationNormal\n      : recipientChatBubbleOrientationNormal),\n    ...(props.isFirstInGroup && defaultChatBubbleStyles.firstChatBubbleInGroup),\n    ...(props.isFirstInGroup &&\n      (youAreAuthor\n        ? defaultChatBubbleStyles.userFirstChatBubbleInGroup\n        : defaultChatBubbleStyles.recipientFirstChatBubbleInGroup)),\n    ...(props.isCenterInGroup &&\n      defaultChatBubbleStyles.centerChatBubbleInGroup),\n    ...(props.isCenterInGroup &&\n      (youAreAuthor\n        ? defaultChatBubbleStyles.userCenterChatBubbleInGroup\n        : defaultChatBubbleStyles.recipientCenterChatBubbleInGroup)),\n    ...(props.isLastInGroup && defaultChatBubbleStyles.lastChatBubbleInGroup),\n    ...(props.isLastInGroup &&\n      (youAreAuthor\n        ? defaultChatBubbleStyles.userLastChatBubbleInGroup\n        : defaultChatBubbleStyles.recipientLastChatBubbleInGroup)),\n    ...(props.isFirstInGroup && firstChatBubbleInGroup),\n    ...(props.isFirstInGroup &&\n      (youAreAuthor\n        ? userFirstChatBubbleInGroup\n        : recipientFirstChatBubbleInGroup)),\n    ...(props.isCenterInGroup && centerChatBubbleInGroup),\n    ...(props.isCenterInGroup &&\n      (youAreAuthor\n        ? userCenterChatBubbleInGroup\n        : recipientCenterChatBubbleInGroup)),\n    ...(props.isLastInGroup && lastChatBubbleInGroup),\n    ...(props.isLastInGroup &&\n      (youAreAuthor\n        ? userLastChatBubbleInGroup\n        : recipientLastChatBubbleInGroup)),\n  };\n\n  const messageStyle = {\n    ...defaultChatBubbleStyles.text,\n    ...text,\n    ...(youAreAuthor ? userText : recipientText),\n  };\n  const messageClassName = classnames(\n    defaultChatBubbleClasses.text,\n    classes?.text,\n    youAreAuthor\n      ? defaultChatBubbleClasses.userText\n      : defaultChatBubbleClasses.recipientText,\n    youAreAuthor ? classes?.userText : classes?.recipientText\n  );\n\n  const [\n    isMouseOverLastSeenContainer,\n    setIsMouseOverLastSeenContainer,\n  ] = React.useState(false);\n\n  const onMouseEnterLastSeenContainer = React.useCallback(\n    () => setIsMouseOverLastSeenContainer(true),\n    []\n  );\n  const onMouseLeaveLastSeenContainer = React.useCallback(\n    () => setIsMouseOverLastSeenContainer(false),\n    []\n  );\n\n  return (\n    <div\n      style={{\n        ...defaultChatBubbleStyles.chatBubbleWrapper,\n        ...chatBubbleWrapper,\n      }}\n      className={classnames(\n        defaultChatBubbleClasses.chatBubbleWrapper,\n        classes?.chatBubbleWrapper\n      )}\n    >\n      <div\n        style={{ ...finalChatBubbleStyles }}\n        className={classnames(\n          defaultChatBubbleClasses.chatBubble,\n          classes?.chatBubble,\n          {\n            [defaultChatBubbleClasses.recipientChatBubble]: !youAreAuthor,\n            [classes?.recipientChatBubble ?? '']: !youAreAuthor,\n            [defaultChatBubbleClasses.userChatBubble]: youAreAuthor,\n            [classes?.userChatBubble ?? '']: youAreAuthor,\n          }\n        )}\n      >\n        {props.CustomMessageRender ? (\n          <props.CustomMessageRender\n            message={props.message}\n            style={messageStyle}\n            className={messageClassName}\n          />\n        ) : (\n          <span style={messageStyle} className={messageClassName}>\n            {props.message.message}\n          </span>\n        )}\n        {props.message.createdOn && (\n          <span\n            style={{\n              ...defaultChatBubbleStyles.createdOn,\n              ...createdOn,\n              ...(youAreAuthor\n                ? defaultChatBubbleStyles.userCreatedOn\n                : defaultChatBubbleStyles.recipientCreatedOn),\n              ...(youAreAuthor ? userCreatedOn : recipientCreatedOn),\n            }}\n            className={classnames(\n              defaultChatBubbleClasses.createdOn,\n              classes?.createdOn,\n              {\n                [defaultChatBubbleClasses.userCreatedOn]: youAreAuthor,\n                [classes?.userCreatedOn ?? '']: youAreAuthor,\n                [defaultChatBubbleClasses.recipientCreatedOn]: !youAreAuthor,\n                [classes?.recipientCreatedOn ?? '']: !youAreAuthor,\n              }\n            )}\n            title={props.message.createdOn.toLocaleString()}\n          >\n            {finalConfig.formatTime(props.message.createdOn)}\n          </span>\n        )}\n        {props.message.isSend !== undefined && youAreAuthor && (\n          <span\n            style={{\n              ...defaultChatBubbleStyles.isSend,\n            }}\n            className={classnames(\n              defaultChatBubbleClasses.isSend,\n              classes?.isSend\n            )}\n            // TODO: Maybe when we do translations\n            // title={props.message.isSend ? 'Send' : 'Sending'}\n          >\n            {props.message.isSend ? (\n              <svg\n                width=\"10px\"\n                height=\"10px\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 10 10\"\n                preserveAspectRatio=\"xMidYMid\"\n                style={{ background: 'none' }}\n              >\n                <path\n                  fill={\n                    isSendIconColor\n                      ? isSendIconColor\n                      : defaultChatBubbleStyles.isSendIconColor\n                  }\n                  {\n                    /* tslint:disable-next-line:max-line-length*/ ...{}\n                  }\n                  d=\"M9,1.7L8.6,1.4C8.5,1.3,8.3,1.3,8.2,1.4L3.9,7C3.8,7.1,3.6,7.1,3.5,7c0,0,0,0,0,0L1.7,5.3c-0.1-0.1-0.3-0.1-0.4,0L1,5.6 C0.9,5.7,0.9,5.9,1,6l2.6,2.6c0.1,0.1,0.3,0.1,0.4,0L9,2.1C9.1,2,9.1,1.8,9,1.7z\"\n                />\n              </svg>\n            ) : (\n              <svg\n                width=\"10px\"\n                height=\"10px\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 100 100\"\n                preserveAspectRatio=\"xMidYMid\"\n                style={{ background: 'none' }}\n              >\n                <path\n                  stroke=\"none\"\n                  d=\"M10 50A40 40 0 0 0 90 50A40 45 0 0 1 10 50\"\n                  fill={\n                    loadingSpinnerColor\n                      ? loadingSpinnerColor\n                      : defaultChatBubbleStyles.loadingSpinnerColor\n                  }\n                  transform=\"rotate(78 50 52.5)\"\n                >\n                  <animateTransform\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    calcMode=\"linear\"\n                    values=\"0 50 52.5;360 50 52.5\"\n                    keyTimes=\"0;1\"\n                    dur=\"1s\"\n                    begin=\"0s\"\n                    repeatCount=\"indefinite\"\n                  />\n                </path>\n              </svg>\n            )}\n          </span>\n        )}\n      </div>\n      {props.showRecipientLastSeenMessage &&\n        props.lastSeenByAuthors &&\n        props.lastSeenByAuthors.length > 0 &&\n        props.CustomLastSeenAvatar && (\n          <div\n            style={{\n              ...defaultChatBubbleStyles.lastSeenByContainer,\n              ...lastSeenByContainer,\n            }}\n            className={classnames(\n              defaultChatBubbleClasses.lastSeenByContainer,\n              classes?.lastSeenByContainer\n            )}\n            onMouseEnter={onMouseEnterLastSeenContainer}\n            onMouseLeave={onMouseLeaveLastSeenContainer}\n            // TODO: Maybe when we do translations\n            /*title={\n                'Last seen by ' +\n                props.lastSeenByAuthors\n                  .map((a) => a.name)\n                  .join(', ')\n                  .replace(/,(?!.*,)/gim, ' and')\n              }*/\n          >\n            {props.lastSeenByAuthors.map((a, i) => (\n              <props.CustomLastSeenAvatar\n                key={i}\n                author={a}\n                styles={lastSeenAvatarStyles}\n                index={i}\n                mouseOver={isMouseOverLastSeenContainer}\n                classes={lastSeenAvatarClasses}\n              />\n            ))}\n          </div>\n        )}\n    </div>\n  );\n}\n","export interface AvatarStyles {\r\n  container?: React.CSSProperties;\r\n  text?: React.CSSProperties;\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'absolute',\r\n    left: -50,\r\n    top: 0,\r\n    width: 40,\r\n    height: 40,\r\n    lineHeight: '40px',\r\n    fontWeight: 400,\r\n    borderRadius: 20,\r\n    textAlign: 'center',\r\n    borderTopRightRadius: 5,\r\n  } as React.CSSProperties,\r\n  text: {\r\n    pointerEvents: 'none',\r\n  } as React.CSSProperties,\r\n};\r\n\r\nexport { styles as defaultAvatarStyles };\r\n","import * as React from 'react';\nimport classnames from 'classnames';\nimport { ChatScrollAreaStyles, defaultChatScrollAreaStyles } from './styles';\nimport { ChatScrollAreaClasses, defaultChatScrollAreaClasses } from './classes';\nexport * from './classes';\nexport * from './styles';\n\nexport interface ChatScrollAreaProps {\n  maxHeight?: string | number;\n  minHeight?: string | number;\n  children?: JSX.Element | JSX.Element[];\n  styles?: ChatScrollAreaStyles;\n  apiRef?: (api: ChatScrollAreaApi) => void;\n  loadOldMessagesThreshold: number;\n  onLoadOldMessages: () => Promise<void>;\n\n  classes?: ChatScrollAreaClasses;\n}\n\nexport interface ChatScrollAreaApi {\n  scrollToBottom: (behavior?: ScrollBehavior) => void;\n  scrollTo: (top: number) => void;\n  scrollTop: () => number;\n  scrollHeight: () => number;\n  clientHeight: () => number;\n  scrolledToBottom: () => boolean;\n  scrolledToLoadThreshold: () => boolean; // Check if we are scrolled to threshold where we need to load messages\n}\n\nexport class ChatScrollArea extends React.PureComponent<ChatScrollAreaProps> {\n  scrollContainer: HTMLDivElement;\n  constructor(props: ChatScrollAreaProps) {\n    super(props);\n    this.containerRef = this.containerRef.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n  }\n\n  public render() {\n    const { styles, classes } = this.props;\n    return (\n      <div\n        ref={this.containerRef}\n        className={classnames(\n          defaultChatScrollAreaClasses.container,\n          classes?.container\n        )}\n        style={{\n          ...defaultChatScrollAreaStyles.container,\n          ...(this.props.maxHeight !== undefined\n            ? { maxHeight: this.props.maxHeight }\n            : {}),\n          ...(this.props.minHeight !== undefined\n            ? { minHeight: this.props.minHeight }\n            : {}),\n          ...styles?.container,\n        }}\n        onScroll={this.onScroll}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n\n  private onScroll() {\n    this.scrollContainer &&\n      this.scrollContainer.scrollTop <= this.props.loadOldMessagesThreshold &&\n      this.props.onLoadOldMessages();\n  }\n\n  private containerRef(scrollContainer: HTMLDivElement) {\n    this.scrollContainer = scrollContainer;\n    this.props.apiRef &&\n      this.props.apiRef({\n        scrollToBottom: (behavior = 'auto') =>\n          scrollContainer &&\n          (scrollContainer.scrollTo\n            ? scrollContainer.scrollTo({\n                top: scrollContainer.scrollHeight,\n                behavior,\n              })\n            : (scrollContainer.scrollTop = scrollContainer.scrollHeight)),\n        scrollTo: (top) =>\n          scrollContainer &&\n          (scrollContainer.scrollTo\n            ? scrollContainer.scrollTo({\n                top: top,\n              })\n            : (scrollContainer.scrollTop = top)),\n        scrolledToBottom: () =>\n          this.scrollContainer.clientHeight + this.scrollContainer.scrollTop ===\n          this.scrollContainer.scrollHeight,\n        scrolledToLoadThreshold: () =>\n          this.scrollContainer &&\n          this.scrollContainer.scrollTop <= this.props.loadOldMessagesThreshold,\n        scrollTop: () => this.scrollContainer && this.scrollContainer.scrollTop,\n        scrollHeight: () =>\n          this.scrollContainer && this.scrollContainer.scrollHeight,\n        clientHeight: () =>\n          this.scrollContainer && this.scrollContainer.clientHeight,\n      });\n  }\n}\n","export interface AvatarClasses {\r\n  container?: string;\r\n  text?: string;\r\n}\r\n\r\nconst classes: AvatarClasses = {\r\n  container: 'react-bell-chat__avatar',\r\n  text: 'react-bell-chat__avatar__text',\r\n};\r\n\r\nexport { classes as defaultAvatarClasses };\r\n","import * as React from 'react';\nimport { Author } from '../Author';\nimport classnames from 'classnames';\nimport { AvatarStyles, defaultAvatarStyles } from './styles';\nimport { AvatarClasses, defaultAvatarClasses } from './classes';\n\nexport * from './classes';\nexport * from './styles';\n\nexport interface AvatarProps {\n  author: Author;\n  styles?: AvatarStyles;\n  classes?: AvatarClasses;\n}\n\nconst Avatar: React.FC<AvatarProps> = (props) => {\n  const { author, classes, styles } = props;\n  const style = {\n    ...defaultAvatarStyles.container,\n    ...styles?.container,\n    ...(author?.bgImageUrl\n      ? ({\n          backgroundImage: `url(${author?.bgImageUrl})`,\n          backgroundSize: 'cover',\n        } as React.CSSProperties)\n      : {}),\n  };\n  return (\n    author && (\n      <div\n        style={style}\n        title={author.name}\n        className={classnames(\n          defaultAvatarClasses.container,\n          classes?.container\n        )}\n      >\n        <span\n          style={{\n            ...defaultAvatarStyles.text,\n            ...styles?.text,\n            ...props.styles?.text,\n          }}\n          className={classnames(defaultAvatarClasses.text, classes?.text)}\n        >\n          {author.bgImageUrl\n            ? null\n            : author.avatarName\n            ? author.avatarName\n            : author.name\n                .split(' ')\n                .map((part) => part[0])\n                .join('')\n                .toUpperCase()\n                .substr(0, 3)}\n        </span>\n      </div>\n    )\n  );\n};\nconst Memoized = React.memo(Avatar);\nexport { Memoized as Avatar };\n","export interface IsTypingClasses {\r\n  container?: string;\r\n}\r\n\r\nconst classes: IsTypingClasses = {\r\n  container: 'react-bell-chat__is-typing__container',\r\n};\r\n\r\nexport { classes as defaultIsTypingClasses };\r\n","export interface IsTypingStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nconst styles: IsTypingStyles = {\r\n  container: {\r\n    position: 'absolute',\r\n    bottom: 2,\r\n    left: 0,\r\n    right: 0,\r\n    color: 'rgb(204, 204, 204)',\r\n    textAlign: 'center',\r\n  } as React.CSSProperties,\r\n};\r\n\r\nexport { styles as defaultIsTypingStyles };\r\n","import * as React from 'react';\nimport { Author } from '../Author';\nimport classnames from 'classnames';\nimport { IsTypingClasses, defaultIsTypingClasses } from './classes';\nimport { IsTypingStyles, defaultIsTypingStyles } from './styles';\nexport * from './classes';\nexport * from './styles';\n\nexport interface IsTypingProps {\n  typingAuthors: Author[];\n  styles?: IsTypingStyles;\n  classes?: IsTypingClasses;\n}\n\nconst IsTyping: React.FC<IsTypingProps> = (props) => {\n  let { styles, classes } = props;\n\n  const style = React.useMemo(\n    () => ({ ...defaultIsTypingStyles.container, ...styles?.container }),\n    [styles?.container]\n  );\n\n  return (\n    props.typingAuthors &&\n    props.typingAuthors.length > 0 && (\n      <div\n        className={classnames(\n          defaultIsTypingClasses.container,\n          classes?.container\n        )}\n        style={style}\n      >\n        {props.typingAuthors\n          .map((a) => a.name)\n          .join(', ')\n          .replace(/,(?!.*,)/gim, ' and') +\n          (props.typingAuthors.length === 1 ? ' is ' : ' are ') +\n          'typing'}\n      </div>\n    )\n  );\n};\n\nconst Memoized = React.memo(IsTyping);\n\nexport { Memoized as IsTyping };\n","export interface ChatScrollAreaStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nconst styles: ChatScrollAreaStyles = {\r\n  container: {\r\n    overflow: 'auto',\r\n    padding: '0 10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    // flexDirection: 'column-reverse'\r\n  },\r\n};\r\n\r\nexport { styles as defaultChatScrollAreaStyles };\r\n","export interface ChatScrollAreaClasses {\r\n  container?: string;\r\n}\r\n\r\nconst classes: ChatScrollAreaClasses = {\r\n  container: 'react-bell-chat__chat-scroll-area',\r\n};\r\n\r\nexport { classes as defaultChatScrollAreaClasses };\r\n","export interface LastSeenAvatarClasses {\r\n  container?: string;\r\n  text?: string;\r\n}\r\n\r\nconst classes: LastSeenAvatarClasses = {\r\n  container: 'react-bell-chat__last-seen-avatar',\r\n  text: 'react-bell-chat__last-seen-avatar__text',\r\n};\r\n\r\nexport { classes as defaultLastSeenAvatarClasses };\r\n","export interface LastSeenAvatarStyles {\r\n  container?: React.CSSProperties;\r\n  containerMouseOver?: React.CSSProperties;\r\n  text?: React.CSSProperties;\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    width: 24,\r\n    height: 24,\r\n    lineHeight: '24px',\r\n    fontWeight: 400,\r\n    fontSize: 10,\r\n    borderRadius: 12,\r\n    textAlign: 'center',\r\n    transition: '0.3s all ease-in-out',\r\n    display: 'block',\r\n    position: 'relative',\r\n  } as React.CSSProperties,\r\n  text: {\r\n    pointerEvents: 'none',\r\n  } as React.CSSProperties,\r\n};\r\n\r\nexport { styles as defaultLastSeenAvatarStyles };\r\n","import * as React from 'react';\nimport { Author } from '../Author';\nimport classnames from 'classnames';\nimport { LastSeenAvatarClasses, defaultLastSeenAvatarClasses } from './classes';\nimport { LastSeenAvatarStyles, defaultLastSeenAvatarStyles } from './styles';\nexport * from './classes';\nexport * from './styles';\n\nexport interface LastSeenAvatarProps {\n  author: Author;\n  index?: number;\n  mouseOver?: boolean;\n  styles?: LastSeenAvatarStyles;\n  classes?: LastSeenAvatarClasses;\n}\n\nconst LastSeenAvatar: React.FC<LastSeenAvatarProps> = (props) => {\n  let { styles, classes, index, mouseOver, author } = props;\n\n  const style = React.useMemo(\n    () => ({\n      ...defaultLastSeenAvatarStyles.container,\n      ...styles?.container,\n      ...(author?.bgImageUrl\n        ? ({\n            backgroundImage: `url(${author?.bgImageUrl})`,\n            backgroundSize: 'cover',\n          } as React.CSSProperties)\n        : {}),\n      ...(index > 0 && !mouseOver ? { marginTop: -12 } : { marginTop: -4 }),\n    }),\n    [styles?.container, index, mouseOver, author?.bgImageUrl]\n  );\n\n  const textStyle = React.useMemo(\n    () => ({\n      ...defaultLastSeenAvatarStyles.text,\n      ...styles?.text,\n    }),\n    [styles?.text]\n  );\n\n  return (\n    author && (\n      <div\n        style={style}\n        className={classnames(\n          defaultLastSeenAvatarClasses.container,\n          classes?.container\n        )}\n      >\n        <span\n          style={textStyle}\n          className={classnames(\n            defaultLastSeenAvatarClasses.text,\n            classes?.text\n          )}\n        >\n          {author.bgImageUrl\n            ? null\n            : author.lastSeenAvatarName\n            ? author.lastSeenAvatarName\n            : author.name[0].toUpperCase()}\n        </span>\n      </div>\n    )\n  );\n};\n\nconst Memoized = React.memo(LastSeenAvatar);\n\nexport { Memoized as LastSeenAvatar };\n","export interface BubbleGroupClasses {\r\n  chatBubbleWrapper?: string;\r\n}\r\n\r\nconst classes: BubbleGroupClasses = {\r\n  chatBubbleWrapper: 'react-bell-chat__bubble-group',\r\n};\r\n\r\nexport { classes as defaultBubbleGroupClasses };\r\n","import * as React from 'react';\n\nexport interface BubbleGroupStyles {\n  bubbleGroupWrapper?: React.CSSProperties;\n}\n\nconst styles: BubbleGroupStyles = {\n  bubbleGroupWrapper: {\n    marginTop: 10,\n    marginBottom: 10,\n    position: 'relative',\n  },\n};\n\nexport { styles as defaultBubbleGroupStyles };\n","import * as React from 'react';\nimport {\n  ChatBubbleProps,\n  ChatBubbleStyles,\n  MessageRenderProps,\n} from '../ChatBubble';\nimport { Message } from '../';\nimport { Author } from '../Author';\nimport { AvatarProps, AvatarClasses } from '../Avatar';\nimport {\n  LastSeenAvatarProps,\n  LastSeenAvatarStyles,\n  LastSeenAvatarClasses,\n} from '../LastSeenAvatar';\nimport { AvatarStyles } from './../Avatar';\nimport classnames from 'classnames';\nimport { ChatBubbleClasses } from './../ChatBubble';\nimport { BubbleGroupClasses, defaultBubbleGroupClasses } from './classes';\nimport { BubbleGroupStyles, defaultBubbleGroupStyles } from './styles';\nimport { ComponentType } from '../utils/componentType';\n\nexport * from './styles';\nexport * from './classes';\n\nexport interface BubbleGroupProps<T = string> {\n  yourAuthorId?: number;\n  messages: Message<T>[];\n  author: Author;\n  authors?: Author[];\n  showRecipientAvatar?: boolean;\n  bubblesCentered?: boolean;\n\n  classes?: BubbleGroupClasses;\n  chatBubbleClasses?: ChatBubbleClasses;\n  avatarClasses?: AvatarClasses;\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\n\n  styles?: BubbleGroupStyles;\n  chatBubbleStyles?: ChatBubbleStyles;\n  avatarStyles?: AvatarStyles;\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\n\n  CustomAvatar?: ComponentType<AvatarProps>;\n  CustomMessageRender?: ComponentType<MessageRenderProps<T>>;\n  CustomLastSeenAvatar?: ComponentType<LastSeenAvatarProps>;\n  CustomChatBubble?: ComponentType<ChatBubbleProps<T>>;\n  CustomSystemChatBubble?: ComponentType<ChatBubbleProps<T>>;\n\n  showRecipientLastSeenMessage?: boolean;\n}\n\nfunction BubbleGroup<T = string>(props: BubbleGroupProps<T>) {\n  const {\n    messages,\n    author,\n\n    CustomAvatar,\n\n    styles,\n\n    bubblesCentered,\n\n    chatBubbleStyles,\n    lastSeenAvatarStyles,\n    avatarStyles,\n\n    classes,\n    chatBubbleClasses,\n    lastSeenAvatarClasses,\n    avatarClasses,\n\n    showRecipientAvatar,\n    CustomChatBubble,\n    CustomSystemChatBubble,\n    showRecipientLastSeenMessage,\n    CustomLastSeenAvatar,\n    CustomMessageRender,\n  } = props;\n\n  const messageNodes = messages.map((message, i) => {\n    const _props: ChatBubbleProps<T> = {\n      yourAuthorId: props.yourAuthorId,\n      author,\n      message,\n      bubblesCentered,\n\n      styles: chatBubbleStyles,\n      lastSeenAvatarStyles,\n\n      classes: chatBubbleClasses,\n      lastSeenAvatarClasses,\n\n      isFirstInGroup: i === 0,\n      isLastInGroup: i === messages.length - 1 && messages.length > 1,\n      isCenterInGroup: i < messages.length - 1 && messages.length > 1,\n      lastSeenByAuthors:\n        props.authors &&\n        props.authors.filter(\n          (a) =>\n            a.lastSeenMessageId !== undefined &&\n            a.lastSeenMessageId === message.id\n        ),\n      showRecipientLastSeenMessage,\n      CustomLastSeenAvatar,\n      CustomMessageRender,\n    };\n    return message.authorId !== undefined ? (\n      <CustomChatBubble key={i} {..._props} />\n    ) : (\n      <CustomSystemChatBubble key={i} {..._props} />\n    );\n  });\n\n  const youAreAuthor = author && props.yourAuthorId === author.id;\n  return (\n    <div\n      style={{\n        ...defaultBubbleGroupStyles.bubbleGroupWrapper,\n        ...styles?.bubbleGroupWrapper,\n      }}\n      className={classnames(\n        defaultBubbleGroupClasses.chatBubbleWrapper,\n        classes?.chatBubbleWrapper\n      )}\n    >\n      {!youAreAuthor && showRecipientAvatar && author && CustomAvatar && (\n        <CustomAvatar\n          author={author}\n          styles={avatarStyles}\n          classes={avatarClasses}\n        />\n      )}\n      {messageNodes}\n    </div>\n  );\n}\n\nconst Memoized = React.memo(BubbleGroup);\nexport { Memoized as BubbleGroup };\n","export interface ChatMessagesContainerClasses {\r\n  root?: string;\r\n  showRecipientAvatar?: string;\r\n  showRecipientLastSeenMessage?: string;\r\n  showIsTyping?: string;\r\n}\r\n\r\nconst classes: ChatMessagesContainerClasses = {\r\n  root: 'react-bell-chat__chat-messages',\r\n  showRecipientAvatar: 'react-bell-chat__chat-messages--showRecipientAvatar',\r\n  showRecipientLastSeenMessage:\r\n    'react-bell-chat__chat-messages--showRecipientLastSeenMessage',\r\n  showIsTyping: 'react-bell-chat__chat-messages--showIsTyping',\r\n};\r\n\r\nexport { classes as defaultChatMessagesContainerClasses };\r\n","export interface ChatMessagesContainerStyles {\r\n  root?: React.CSSProperties;\r\n  showRecipientAvatar?: React.CSSProperties;\r\n  showRecipientLastSeenMessage?: React.CSSProperties;\r\n  showIsTyping?: React.CSSProperties;\r\n}\r\n\r\nconst styles: ChatMessagesContainerStyles = {\r\n  root: {\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  showRecipientAvatar: {\r\n    paddingLeft: 50,\r\n  },\r\n  showIsTyping: {\r\n    paddingBottom: 24,\r\n    position: 'relative',\r\n  },\r\n  showRecipientLastSeenMessage: {\r\n    paddingRight: 30,\r\n  },\r\n};\r\n\r\nexport { styles as defaultChatMessagesContainerStyles };\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport { ChatMessagesContainerClasses, defaultChatMessagesContainerClasses } from './classes';\r\nimport { ChatMessagesContainerStyles, defaultChatMessagesContainerStyles } from './styles';\r\nexport * from './classes';\r\nexport * from './styles';\r\n\r\nexport interface ChatMessagesContainerProps\r\n  extends React.PropsWithChildren<{\r\n    showRecipientLastSeenMessage: boolean;\r\n    showRecipientAvatar: boolean;\r\n    showIsTyping: boolean;\r\n    classes?: ChatMessagesContainerClasses;\r\n    styles?: ChatMessagesContainerStyles;\r\n  }> {}\r\n\r\nexport const ChatMessagesContainer: React.FC<ChatMessagesContainerProps> = (\r\n  props\r\n) => {\r\n  const {\r\n    children,\r\n    classes,\r\n    styles,\r\n    showIsTyping,\r\n    showRecipientAvatar,\r\n    showRecipientLastSeenMessage,\r\n  } = props;\r\n  const style = React.useMemo(\r\n    () => ({\r\n      ...defaultChatMessagesContainerStyles?.root,\r\n      ...styles?.root,\r\n      ...(showRecipientAvatar && defaultChatMessagesContainerStyles?.showRecipientAvatar),\r\n      ...(showRecipientAvatar && styles?.showRecipientAvatar),\r\n      ...(showIsTyping && defaultChatMessagesContainerStyles?.showIsTyping),\r\n      ...(showIsTyping && styles?.showIsTyping),\r\n      ...(showRecipientLastSeenMessage &&\r\n        defaultChatMessagesContainerStyles?.showRecipientLastSeenMessage),\r\n      ...(showRecipientLastSeenMessage && styles?.showRecipientLastSeenMessage),\r\n    }),\r\n    [\r\n      showIsTyping,\r\n      showRecipientAvatar,\r\n      showRecipientLastSeenMessage,\r\n      styles?.root,\r\n      styles?.showRecipientAvatar,\r\n      styles?.showIsTyping,\r\n      styles?.showRecipientLastSeenMessage,\r\n    ]\r\n  );\r\n  const className = classNames(defaultChatMessagesContainerClasses.root, classes?.root, {\r\n    [defaultChatMessagesContainerClasses?.showRecipientAvatar]: showRecipientAvatar,\r\n    [classes?.showRecipientAvatar]: showRecipientAvatar,\r\n    [defaultChatMessagesContainerClasses?.showIsTyping]: showIsTyping,\r\n    [classes?.showIsTyping]: showIsTyping,\r\n    [defaultChatMessagesContainerClasses?.showRecipientLastSeenMessage]: showRecipientLastSeenMessage,\r\n    [classes?.showRecipientLastSeenMessage]: showRecipientLastSeenMessage,\r\n  });\r\n\r\n  return (\r\n    <div style={style} className={className}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","export interface DateRowClasses {\r\n  container?: string;\r\n}\r\n\r\nconst classes: DateRowClasses = {\r\n  container: 'react-bell-chat__date-row',\r\n};\r\n\r\nexport { classes as defaultDateRowClasses };\r\n","export interface DateRowStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nconst styles: DateRowStyles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    fontSize: 12,\r\n    color: 'rgba(0, 0, 0, 0.55)',\r\n  },\r\n};\r\n\r\nexport { styles as defaultDateRowStyles };\r\n","import * as React from 'react';\nimport classnames from 'classnames';\nimport { DateRowClasses, defaultDateRowClasses } from './classes';\nimport { DateRowStyles, defaultDateRowStyles } from './styles';\nexport * from './classes';\nexport * from './styles';\n\nexport interface DateRowProps {\n  date: Date;\n  styles?: DateRowStyles;\n  classes?: DateRowClasses;\n}\n\nconst DateRow: React.FC<DateRowProps> = (props) => {\n  let { styles, classes } = props;\n  const style = React.useMemo(\n    () => ({\n      ...defaultDateRowStyles.container,\n      ...styles?.container,\n    }),\n    [styles?.container]\n  );\n  return (\n    props.date && (\n      <div\n        className={classnames(\n          defaultDateRowClasses.container,\n          classes?.container\n        )}\n        style={style}\n        title={props.date.toLocaleDateString([], {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n        })}\n      >\n        {props.date.toLocaleDateString()}\n      </div>\n    )\n  );\n};\n\nconst Memoized = React.memo(DateRow);\n\nexport { Memoized as DateRow };\n","export interface LoadingMessagesStyle {\r\n  container?: React.CSSProperties;\r\n  spinnerColor?: string;\r\n}\r\n\r\nconst styles: LoadingMessagesStyle = {\r\n  container: {\r\n    display: 'flex',\r\n    marginBottom: 10,\r\n  },\r\n  spinnerColor: 'currentColor',\r\n};\r\n\r\nexport { styles as defaultLoadingMessagesStyle };\r\n","export interface LoadingMessagesClasses {\r\n  container?: string;\r\n}\r\n\r\nconst classes: LoadingMessagesClasses = {\r\n  container: 'react-bell-chat__loading-messages',\r\n};\r\n\r\nexport { classes as defaultLoadingMessagesClasses };\r\n","import * as React from 'react';\nimport classnames from 'classnames';\nimport { LoadingMessagesStyle, defaultLoadingMessagesStyle } from './styles';\nimport {\n  LoadingMessagesClasses,\n  defaultLoadingMessagesClasses,\n} from './classes';\nexport * from './classes';\nexport * from './styles';\n\nexport interface LoadingMessagesProps {\n  styles?: LoadingMessagesStyle;\n  classes?: LoadingMessagesClasses;\n  className?: string;\n  isVisible: boolean;\n}\n\nconst LoadingMessages: React.FC<LoadingMessagesProps> = (props) => {\n  const { styles, classes } = props;\n\n  const style = React.useMemo(\n    () => ({\n      ...defaultLoadingMessagesStyle.container,\n      ...styles?.container,\n    }),\n    [styles?.container]\n  );\n\n  const svgStyle = React.useMemo(\n    () => ({\n      background: 'none',\n      margin: 'auto',\n      fill: styles?.spinnerColor ?? defaultLoadingMessagesStyle.spinnerColor,\n      opacity: props.isVisible ? 1 : 0,\n      transition: '0.3s all ease-in-out',\n    }),\n    [styles?.spinnerColor, props.isVisible]\n  );\n  return (\n    <div\n      className={classnames(\n        defaultLoadingMessagesClasses.container,\n        props.className,\n        classes?.container\n      )}\n      style={style}\n    >\n      <svg\n        width=\"40px\"\n        height=\"40px\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 100 100\"\n        preserveAspectRatio=\"xMidYMid\"\n        style={svgStyle}\n      >\n        <path\n          stroke=\"none\"\n          d=\"M10 50A40 40 0 0 0 90 50A40 46 0 0 1 10 50\"\n          transform=\"rotate(42 50 53)\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            calcMode=\"linear\"\n            values=\"0 50 53;360 50 53\"\n            keyTimes=\"0;1\"\n            dur=\"1s\"\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n      </svg>\n    </div>\n  );\n};\n\nconst Memoized = React.memo(LoadingMessages);\n\nexport { Memoized as LoadingMessages };\n","import * as classNames from 'classnames';\r\nimport {\r\n  ChatBubbleClasses,\r\n  defaultChatBubbleClasses,\r\n} from '../ChatBubble/classes';\r\n\r\nconst classes: ChatBubbleClasses = {\r\n  chatBubbleWrapper: classNames(\r\n    defaultChatBubbleClasses.chatBubbleWrapper,\r\n    'react-bell-chat__chat-bubble--system'\r\n  ),\r\n  createdOn: 'react-bell-chat__chat-bubble--system__created-on',\r\n};\r\n\r\nexport { classes as defaultSystemChatBubbleClasses };\r\n","import { ChatBubbleStyles } from '../ChatBubble/styles';\r\n\r\nconst styles: ChatBubbleStyles = {\r\n  systemChatBubbleContainer: {\r\n    textAlign: 'center',\r\n    fontSize: 12,\r\n    color: 'rgba(0, 0, 0, 0.55)',\r\n  } as React.CSSProperties,\r\n};\r\n\r\nexport { styles as defaultSystemChatBubbleStyles };\r\n","import * as React from 'react';\nimport { ChatBubbleProps, defaultChatBubbleConfig } from '../ChatBubble';\nimport classnames from 'classnames';\nimport { defaultSystemChatBubbleClasses } from './classes';\nimport { defaultSystemChatBubbleStyles } from './styles';\nexport * from './classes';\nexport * from './styles';\n\nexport interface SystemChatBubbleProps<T> extends ChatBubbleProps<T> {}\n\nfunction SystemChatBubble<T = string>(props: SystemChatBubbleProps<T>) {\n  const { styles, classes, message, config } = props;\n\n  const finalConfig = {\n    ...defaultChatBubbleConfig,\n    ...config,\n  };\n\n  const time = finalConfig.formatTime(message.createdOn);\n\n  const style = React.useMemo(\n    () => ({\n      ...defaultSystemChatBubbleStyles.systemChatBubbleContainer,\n      ...styles?.systemChatBubbleContainer,\n    }),\n    [styles?.systemChatBubbleContainer]\n  );\n  const textStyle = React.useMemo(\n    () => ({\n      ...defaultSystemChatBubbleStyles.systemChatBubbleText,\n      ...styles?.systemChatBubbleText,\n    }),\n    [styles?.systemChatBubbleText]\n  );\n  return (\n    message && (\n      <div\n        className={classnames(\n          defaultSystemChatBubbleClasses.chatBubbleWrapper,\n          classes?.chatBubbleWrapper\n        )}\n        style={style}\n      >\n        {time && (\n          <span\n            className={classnames(\n              defaultSystemChatBubbleClasses.createdOn,\n              classes?.createdOn\n            )}\n            title={props.message.createdOn.toLocaleString()}\n            style={textStyle}\n          >\n            {time}:{' '}\n          </span>\n        )}\n        {props.message.message}\n      </div>\n    )\n  );\n}\n\nconst Memoized = React.memo(SystemChatBubble);\n\nexport { Memoized as SystemChatBubble };\n","import * as React from 'react';\n\nexport interface ChatFeedStyles {\n  chatPanel?: React.CSSProperties;\n  showRecipientAvatarChatMessages?: React.CSSProperties;\n  showRecipientLastSeenMessageChatMessages?: React.CSSProperties;\n  showIsTypingChatMessages?: React.CSSProperties;\n}\n\nconst styles: ChatFeedStyles = {\n  chatPanel: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n    position: 'relative',\n  },\n};\n\nexport { styles as defaultChatFeedStyles };\n","export interface ChatFeedClasses {\r\n  chatPanel?: string;\r\n}\r\n\r\nconst classes: ChatFeedClasses = {\r\n  chatPanel: 'react-bell-chat__chat-panel',\r\n};\r\n\r\nexport { classes as defaultChatFeedClasses };\r\n","// Copyright 2017 Brandon Mowat\n// Written, developed, and designed by Brandon Mowat for the purpose of helping\n// other developers make chat interfaces.\n\nimport * as React from 'react';\nimport {\n  BubbleGroup as DefaultBubbleGroup,\n  BubbleGroupClasses,\n  BubbleGroupProps,\n  BubbleGroupStyles,\n} from '../BubbleGroup';\nimport {\n  ChatBubble as DefaultChatBubble,\n  ChatBubbleProps,\n  MessageRenderProps,\n} from '../ChatBubble';\nimport { Message } from '../Message';\nimport { Author } from '../Author';\nimport { ChatBubbleStyles, ChatBubbleClasses } from '../ChatBubble';\nimport {\n  Avatar as DefaultAvatar,\n  AvatarProps,\n  AvatarStyles,\n  AvatarClasses,\n} from '../Avatar';\nimport {\n  IsTyping as DefaultIsTyping,\n  IsTypingStyles,\n  IsTypingClasses,\n  IsTypingProps,\n} from '../IsTyping';\nimport {\n  ChatScrollArea as DefaultChatScrollArea,\n  ChatScrollAreaProps,\n  ChatScrollAreaApi,\n  ChatScrollAreaStyles,\n  ChatScrollAreaClasses,\n} from '../ChatScrollArea';\nimport {\n  ChatMessagesContainer as DefaultChatMessagesContainer,\n  ChatMessagesContainerProps,\n  ChatMessagesContainerClasses,\n  ChatMessagesContainerStyles,\n} from '../ChatMessagesContainer';\nimport {\n  LastSeenAvatar as DefaultLastSeenAvatar,\n  LastSeenAvatarProps,\n  LastSeenAvatarStyles,\n  LastSeenAvatarClasses,\n} from '../LastSeenAvatar';\nimport { groupBy } from '../utils/utils';\nimport {\n  DateRow as DefaultDateRow,\n  DateRowProps,\n  DateRowStyles,\n  DateRowClasses,\n} from '../DateRow';\nimport {\n  LoadingMessages as DefaultLoadingMessages,\n  LoadingMessagesProps,\n  LoadingMessagesStyle,\n  LoadingMessagesClasses,\n} from '../LoadingMessages';\nimport { SystemChatBubble as DefaultSystemChatBubble } from '../SystemChatBubble';\nimport classnames from 'classnames';\nimport { ChatFeedStyles, defaultChatFeedStyles } from './styles';\nimport { ChatFeedClasses, defaultChatFeedClasses } from './classes';\nimport { ComponentType } from '../utils/componentType';\n\nexport * from './classes';\nexport * from './styles';\n\n// Model for ChatFeed props.\n\nexport interface ChatFeedProps<T = string> {\n  // Structural props\n  className?: string;\n\n  // Functional props\n  messages: Message<T>[];\n  authors: Author[];\n  yourAuthorId: number;\n  hasOldMessages?: boolean;\n  loadOldMessagesThreshold?: number;\n\n  // Visual props\n  bubblesCentered?: boolean;\n  maxHeight?: string | number;\n  minHeight?: string | number;\n\n  // Switches\n  showDateRow?: boolean;\n  showRecipientAvatar?: boolean;\n  showRecipientLastSeenMessage?: boolean;\n  showIsTyping?: boolean;\n  showLoadingMessages?: boolean;\n\n  // Custom components\n  CustomLoadingMessages?: ComponentType<LoadingMessagesProps>;\n  CustomChatBubble?: ComponentType<ChatBubbleProps<T>>;\n  CustomBubbleGroup?: ComponentType<BubbleGroupProps<T>>;\n  CustomSystemChatBubble?: ComponentType<ChatBubbleProps<T>>;\n  CustomAvatar?: ComponentType<AvatarProps>;\n  CustomScrollArea?: ComponentType<ChatScrollAreaProps>;\n  CustomChatMessagesContainer?: ComponentType<ChatMessagesContainerProps>;\n  CustomIsTyping?: ComponentType<IsTypingProps>;\n  CustomLastSeenAvatar?: ComponentType<LastSeenAvatarProps>;\n  CustomMessageRender?: ComponentType<MessageRenderProps<T>>;\n  CustomDateRow?: ComponentType<DateRowProps>;\n\n  // Callbacks\n  onLoadOldMessages?: () => Promise<void>;\n\n  // Styles\n  style?: React.CSSProperties;\n  styles?: ChatFeedStyles;\n  bubbleGroupStyles?: BubbleGroupStyles;\n  chatBubbleStyles?: ChatBubbleStyles;\n  chatScrollAreaStyles?: ChatScrollAreaStyles;\n  chatMessagesContainerStyles?: ChatMessagesContainerStyles;\n  avatarStyles?: AvatarStyles;\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\n  dateRowStyles?: DateRowStyles;\n  loadingMessagesStyle?: LoadingMessagesStyle;\n  isTypingStyles?: IsTypingStyles;\n  chatFeedStyles?: ChatFeedStyles;\n\n  // Classes\n  classes?: ChatFeedClasses;\n  chatBubbleClasses?: ChatBubbleClasses;\n  bubbleGroupClasses?: BubbleGroupClasses;\n  chatScrollAreaClasses?: ChatScrollAreaClasses;\n  chatMessagesContainerClasses?: ChatMessagesContainerClasses;\n  avatarClasses?: AvatarClasses;\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\n  dateRowClasses?: DateRowClasses;\n  loadingMessagesClasses?: LoadingMessagesClasses;\n  isTypingClasses?: IsTypingClasses;\n  chatFeedClasses?: ChatFeedStyles;\n}\n\nexport interface ChatFeedState {\n  isLoadingMessages: boolean;\n}\n\nexport interface ChatFeedApi {\n  onMessageSend: () => void;\n  scrollApi: ChatScrollAreaApi;\n}\nfunction DefaultMessageRenderFunc(props: MessageRenderProps<string>) {\n  return (\n    props.message && (\n      <span className={props.className} style={props.style}>\n        {props.message.message}\n      </span>\n    )\n  );\n}\n\nexport interface ChatFeedSnapshot {\n  wasScrolledToBottom: boolean;\n  scrollHeight: number;\n  clientHeight: number;\n}\n\n// React component to render a complete chat feed\nexport class ChatFeed<T = string>\n  extends React.PureComponent<ChatFeedProps<T>, ChatFeedState>\n  implements ChatFeedApi {\n  public static defaultProps: ChatFeedProps = {\n    messages: [],\n    authors: [],\n    CustomChatBubble: DefaultChatBubble,\n    CustomBubbleGroup: DefaultBubbleGroup,\n    CustomMessageRender: DefaultMessageRenderFunc,\n    CustomAvatar: DefaultAvatar,\n    CustomScrollArea: DefaultChatScrollArea,\n    CustomIsTyping: DefaultIsTyping,\n    CustomChatMessagesContainer: DefaultChatMessagesContainer,\n    CustomLastSeenAvatar: DefaultLastSeenAvatar,\n    CustomDateRow: DefaultDateRow,\n    CustomLoadingMessages: DefaultLoadingMessages,\n    yourAuthorId: 0,\n    loadOldMessagesThreshold: 50,\n    CustomSystemChatBubble: DefaultSystemChatBubble,\n  };\n\n  public scrollApi: ChatScrollAreaApi;\n\n  constructor(props: ChatFeedProps<T>) {\n    super(props);\n    this.renderMessages = this.renderMessages.bind(this);\n    this.onLoadOldMessages = this.onLoadOldMessages.bind(this);\n    this.apiRef = this.apiRef.bind(this);\n    this.state = {\n      isLoadingMessages: false,\n    };\n  }\n\n  public onMessageSend() {\n    this.scrollApi && this.scrollApi.scrollToBottom();\n  }\n\n  componentDidMount() {\n    this.scrollApi && this.scrollApi.scrollToBottom();\n  }\n\n  getSnapshotBeforeUpdate(\n    prevProps: ChatFeedProps<T>,\n    prevState: ChatFeedState\n  ) {\n    const wasScrolledToBottom =\n      this.scrollApi && this.scrollApi.scrolledToBottom();\n    const scrollHeight = this.scrollApi && this.scrollApi.scrollHeight();\n    const clientHeight = this.scrollApi && this.scrollApi.clientHeight();\n\n    return {\n      wasScrolledToBottom,\n      scrollHeight,\n      clientHeight,\n    };\n  }\n\n  componentDidUpdate(\n    prevProps: ChatFeedProps<T>,\n    prevState: ChatFeedState,\n    snapshot: ChatFeedSnapshot\n  ) {\n    if (\n      this.props.messages.length !== prevProps.messages.length &&\n      snapshot &&\n      snapshot.wasScrolledToBottom\n    ) {\n      this.scrollApi.scrollToBottom();\n    } else if (\n      this.props.messages.length !== prevProps.messages.length &&\n      snapshot &&\n      prevState.isLoadingMessages\n    ) {\n      const scrollHeight = this.scrollApi && this.scrollApi.scrollHeight();\n      this.scrollApi.scrollTo(scrollHeight - snapshot.scrollHeight);\n    }\n  }\n\n  /**\n   * Determines what type of message/messages to render.\n   */\n  renderMessages<T>(messages: Message<T>[]) {\n    let { styles } = this.props;\n    if (!styles) {\n      styles = {};\n    }\n    const {\n      chatBubbleStyles,\n      chatBubbleClasses,\n      dateRowStyles,\n      dateRowClasses,\n      avatarStyles,\n      avatarClasses,\n      lastSeenAvatarStyles,\n      lastSeenAvatarClasses,\n      bubbleGroupStyles,\n      bubbleGroupClasses,\n      CustomChatBubble,\n      showRecipientAvatar,\n    } = this.props;\n\n    // First group by days\n    const groups = groupBy(\n      messages,\n      (item) => item.createdOn && item.createdOn.toDateString()\n    );\n    let messageNodes: React.ReactNode[] = [];\n    let jsxKey = 0;\n    Object.keys(groups).forEach((key) => {\n      let group = [];\n      const messagesGroup = groups[key];\n      if (\n        messagesGroup[0] &&\n        messagesGroup[0].createdOn &&\n        this.props.showDateRow\n      ) {\n        messageNodes.push(\n          <this.props.CustomDateRow\n            key={key}\n            date={messagesGroup[0].createdOn}\n            styles={dateRowStyles}\n            classes={dateRowClasses}\n          />\n        );\n      }\n      messageNodes = messageNodes.concat(\n        messagesGroup.map((message, index) => {\n          group.push(message);\n          // Find diff in message type or no more messages\n          if (\n            !messagesGroup[index + 1] ||\n            messagesGroup[index + 1].authorId !== message.authorId\n          ) {\n            const messageGroup = group;\n            const author =\n              this.props.authors &&\n              this.props.authors.filter((a) => a.id === message.authorId)[0];\n            group = [];\n            jsxKey++;\n            return (\n              <this.props.CustomBubbleGroup\n                key={jsxKey}\n                yourAuthorId={this.props.yourAuthorId}\n                messages={messageGroup}\n                author={author}\n                authors={this.props.authors}\n                showRecipientAvatar={showRecipientAvatar}\n                CustomChatBubble={CustomChatBubble}\n                chatBubbleStyles={chatBubbleStyles}\n                chatBubbleClasses={chatBubbleClasses}\n                avatarStyles={avatarStyles}\n                avatarClasses={avatarClasses}\n                lastSeenAvatarStyles={lastSeenAvatarStyles}\n                lastSeenAvatarClasses={lastSeenAvatarClasses}\n                showRecipientLastSeenMessage={\n                  this.props.showRecipientLastSeenMessage\n                }\n                CustomAvatar={this.props.CustomAvatar}\n                CustomLastSeenAvatar={this.props.CustomLastSeenAvatar}\n                CustomMessageRender={this.props.CustomMessageRender}\n                CustomSystemChatBubble={this.props.CustomSystemChatBubble}\n                classes={bubbleGroupClasses}\n                styles={bubbleGroupStyles}\n              />\n            );\n          }\n          return null;\n        })\n      );\n    });\n    return messageNodes;\n  }\n\n  renderIsTyping() {\n    const { isTypingStyles, isTypingClasses } = this.props;\n    const typingAuthors =\n      this.props.authors &&\n      this.props.authors.filter(\n        (a) => a.isTyping && a.id !== this.props.yourAuthorId\n      );\n    return (\n      <this.props.CustomIsTyping\n        typingAuthors={typingAuthors}\n        styles={isTypingStyles}\n        classes={isTypingClasses}\n      />\n    );\n  }\n\n  apiRef(e: ChatScrollAreaApi) {\n    if (!this.scrollApi) {\n      e.scrollToBottom();\n    }\n    this.scrollApi = e;\n  }\n\n  render() {\n    let { styles, classes } = this.props;\n    if (!styles) {\n      styles = {};\n    }\n    if (!classes) {\n      classes = {};\n    }\n    const {\n      loadingMessagesStyle,\n      chatFeedStyles,\n      chatScrollAreaStyles,\n      loadingMessagesClasses,\n      chatScrollAreaClasses,\n    } = this.props;\n\n    return (\n      <div\n        className={classnames(\n          defaultChatFeedClasses.chatPanel,\n          this.props.className,\n          classes?.chatPanel\n        )}\n        style={{\n          ...defaultChatFeedStyles.chatPanel,\n          ...(chatFeedStyles && chatFeedStyles.chatPanel),\n          ...this.props.style,\n        }}\n      >\n        <this.props.CustomScrollArea\n          minHeight={this.props.minHeight}\n          maxHeight={this.props.maxHeight}\n          apiRef={this.apiRef}\n          loadOldMessagesThreshold={this.props.loadOldMessagesThreshold}\n          onLoadOldMessages={this.onLoadOldMessages}\n          styles={chatScrollAreaStyles}\n          classes={chatScrollAreaClasses}\n        >\n          <this.props.CustomChatMessagesContainer\n            classes={this.props.chatMessagesContainerClasses}\n            styles={this.props.chatMessagesContainerStyles}\n            showIsTyping={this.props.showIsTyping}\n            showRecipientAvatar={this.props.showRecipientAvatar}\n            showRecipientLastSeenMessage={\n              this.props.showRecipientLastSeenMessage\n            }\n          >\n            <this.props.CustomLoadingMessages\n              isVisible={\n                this.props.showLoadingMessages && this.state.isLoadingMessages\n              }\n              styles={loadingMessagesStyle}\n              classes={loadingMessagesClasses}\n            />\n            {this.renderMessages<T>(this.props.messages)}\n            {this.props.showIsTyping && this.renderIsTyping()}\n          </this.props.CustomChatMessagesContainer>\n        </this.props.CustomScrollArea>\n      </div>\n    );\n  }\n\n  private async onLoadOldMessages() {\n    if (!this.state.isLoadingMessages && this.props.hasOldMessages) {\n      await new Promise<void>((resolve) => {\n        this.setState(\n          {\n            isLoadingMessages: true,\n          },\n          () => resolve()\n        );\n      });\n      if (this.props.onLoadOldMessages) {\n        await this.props.onLoadOldMessages();\n      }\n      await new Promise<void>((resolve) => {\n        this.setState(\n          {\n            isLoadingMessages: false,\n          },\n          () => {\n            if (this.scrollApi.scrolledToLoadThreshold()) {\n              this.scrollApi.scrollTo(this.props.loadOldMessagesThreshold + 1);\n            }\n            resolve();\n          }\n        );\n      });\n    }\n  }\n}\n","const groupBy = <T>(\n  array: Array<T>,\n  groupingKeyFn: (item: T) => string\n): { [key: string]: Array<T> } => {\n  if (typeof groupingKeyFn !== 'function') {\n    throw new Error('groupBy take a function as only parameter');\n  }\n  return array.reduce((result, item) => {\n    const key = groupingKeyFn(item);\n    if (!result[key]) {\n      result[key] = [];\n    }\n    result[key].push(item);\n    return result;\n  }, {});\n};\nexport { groupBy };\n"],"sourceRoot":""}