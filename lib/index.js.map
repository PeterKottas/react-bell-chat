{"version":3,"sources":["..\\react-bell-chat\\webpack/universalModuleDefinition","..\\react-bell-chat\\./node_modules/classnames/index.js","..\\react-bell-chat\\external \"react\"","..\\react-bell-chat\\webpack/bootstrap","..\\react-bell-chat\\webpack/runtime/compat get default export","..\\react-bell-chat\\webpack/runtime/define property getters","..\\react-bell-chat\\webpack/runtime/hasOwnProperty shorthand","..\\react-bell-chat\\webpack/runtime/make namespace object","..\\react-bell-chat\\./src/lib/ChatBubble/styles.ts","..\\react-bell-chat\\./src/lib/ChatBubble/index.tsx","..\\react-bell-chat\\./src/lib/Avatar/index.tsx","..\\react-bell-chat\\./src/lib/IsTyping/index.tsx","..\\react-bell-chat\\./src/lib/ChatScrollArea/index.tsx","..\\react-bell-chat\\./src/lib/LastSeenAvatar/index.tsx","..\\react-bell-chat\\./src/lib/SystemChatBubble/index.tsx","..\\react-bell-chat\\./src/lib/BubbleGroup/styles.ts","..\\react-bell-chat\\./src/lib/BubbleGroup/index.tsx","..\\react-bell-chat\\./src/lib/ChatFeed/styles.ts","..\\react-bell-chat\\./src/lib/utils/utils.ts","..\\react-bell-chat\\./src/lib/DateRow/index.tsx","..\\react-bell-chat\\./src/lib/LoadingMessages/index.tsx","..\\react-bell-chat\\./src/lib/ChatFeed/index.tsx","..\\react-bell-chat\\./src/lib/ChatInput/index.tsx"],"names":["root","factory","exports","module","require","define","amd","i","a","self","__WEBPACK_EXTERNAL_MODULE__297__","hasOwn","hasOwnProperty","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","r","Symbol","toStringTag","value","chatBubbleWrapper","position","marginBottom","display","chatBubble","backgroundColor","borderRadius","marginRight","marginLeft","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","userChatBubbleOrientationNormal","recipientChatBubbleOrientationNormal","recipientChatBubble","text","color","fontSize","fontWeight","margin","whiteSpace","userFirstChatBubbleInGroup","borderTopRightRadius","recipientFirstChatBubbleInGroup","borderTopLeftRadius","userLastChatBubbleInGroup","recipientLastChatBubbleInGroup","userCenterChatBubbleInGroup","borderBottomRightRadius","recipientCenterChatBubbleInGroup","borderBottomLeftRadius","createdOn","right","bottom","isSend","lastSeenByContainer","top","width","height","loadingSpinnerColor","isSendIconColor","props","state","mouseOverLastSeenContainer","render","this","message","lastSeenAvatarStyles","yourAuthorId","lastSeenAvatarClasses","styles","userChatBubble","userText","recipientText","firstChatBubbleInGroup","centerChatBubbleInGroup","lastChatBubbleInGroup","userCreatedOn","recipientCreatedOn","youAreAuthor","authorId","finalChatBubbleStyles","style","isFirstInGroup","isCenterInGroup","isLastInGroup","className","customMessageRender","title","toLocaleString","toLocaleTimeString","hour","minute","hour12","xmlns","viewBox","preserveAspectRatio","background","fill","stroke","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","showRecipientLastSeenMessage","lastSeenByAuthors","customLastSeenAvatar","onMouseEnter","setState","onMouseLeave","map","name","replace","author","container","marginTop","left","lineHeight","textAlign","pointerEvents","avatarName","split","part","toUpperCase","substr","isTypingStyles","typingAuthors","chatScrollAreaStyles","overflow","padding","flexDirection","containerRef","bind","onScroll","ref","maxHeight","minHeight","children","scrollContainer","scrollTop","loadOldMessagesThreshold","onLoadOldMessages","apiRef","scrollToBottom","behavior","scrollTo","scrollHeight","scrolledToBottom","clientHeight","scrolledToLoadThreshold","transition","lastSeenAvatarName","systemChatBubbleStyles","systemChatBubbleContainer","systemChatBubbleText","time","bubbleGroupWrapper","renderGroup","messages","bubblesCentered","chatBubbleStyles","avatarStyles","chatBubbleClasses","avatarClasses","showRecipientAvatar","customChatBubble","customSystemChatBubble","ChatBubble","SystemChatBubble","messageNodes","authors","filter","lastSeenMessageId","id","customAvatar","defaultProps","chatPanel","flexGrow","showRecipientAvatarChatMessages","showIsTypingChatMessages","showRecipientLastSeenMessageChatMessages","chatMessages","flex","justifyContent","dateRowStyles","date","toLocaleDateString","weekday","year","month","day","loadingMessagesStyles","spinnerColor","opacity","isVisible","DefaultChatBubbleFunc","DefaultScrollAreaFunc","DefaultMessageRenderFunc","isLoadingMessages","onMessageSend","scrollApi","componentDidMount","getSnapshotBeforeUpdate","prevProps","prevState","wasScrolledToBottom","componentDidUpdate","snapshot","renderMessages","dateRowClasses","bubbleGroupStyles","bubbleGroupClasses","groups","array","groupingKeyFn","Error","reduce","result","item","groupBy","toDateString","jsxKey","keys","forEach","group","messagesGroup","showDateRow","customDateRow","concat","index","messageGroup","renderIsTyping","isTypingClasses","isTyping","e","loadingMessagesStyle","chatFeedStyles","chatScrollArea","loadingMessagesClasses","chatScrollAreaClasses","customScrollArea","showIsTyping","customLoadingMessages","showLoadingMessages","hasOldMessages","Promise","resolve","then","chatInputStyles","border","borderTopWidth","borderTopStyle","borderTopColor","outline","inputPlaceholder","chatInput","input","placeholder"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__297__) {\nreturn ","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = __WEBPACK_EXTERNAL_MODULE__297__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as React from 'react';\n\nexport interface ChatBubbleStyles {\n  chatBubbleWrapper?: React.CSSProperties;\n  chatBubble?: React.CSSProperties;\n  systemChatBubbleContainer?: React.CSSProperties;\n  systemChatBubbleText?: React.CSSProperties;\n  userChatBubbleOrientationNormal?: React.CSSProperties;\n  recipientChatBubbleOrientationNormal?: React.CSSProperties;\n  text?: React.CSSProperties;\n  userText?: React.CSSProperties;\n  recipientText?: React.CSSProperties;\n  userChatBubble?: React.CSSProperties;\n  recipientChatBubble?: React.CSSProperties;\n  firstChatBubbleInGroup?: React.CSSProperties;\n  userFirstChatBubbleInGroup?: React.CSSProperties;\n  recipientFirstChatBubbleInGroup?: React.CSSProperties;\n  lastChatBubbleInGroup?: React.CSSProperties;\n  userLastChatBubbleInGroup?: React.CSSProperties;\n  recipientLastChatBubbleInGroup?: React.CSSProperties;\n  centerChatBubbleInGroup?: React.CSSProperties;\n  userCenterChatBubbleInGroup?: React.CSSProperties;\n  recipientCenterChatBubbleInGroup?: React.CSSProperties;\n  createdOn?: React.CSSProperties;\n  recipientCreatedOn?: React.CSSProperties;\n  userCreatedOn?: React.CSSProperties;\n  isSend?: React.CSSProperties;\n\n  lastSeenByContainer?: React.CSSProperties;\n  loadingSpinnerColor?: string;\n  isSendIconColor?: string;\n}\n\nconst styles: ChatBubbleStyles = {\n  chatBubbleWrapper: {\n    position: 'relative',\n    marginBottom: 2,\n    display: 'flex',\n  } as React.CSSProperties,\n  chatBubble: {\n    position: 'relative',\n    backgroundColor: '#0084FF',\n    borderRadius: 7,\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    maxWidth: '80%',\n    paddingTop: 8,\n    paddingBottom: 14,\n    paddingLeft: 14,\n    paddingRight: 14,\n    // boxShadow: 'rgba(0, 0, 0, 0.3) 2px 2px 2px'\n  } as React.CSSProperties,\n  userChatBubbleOrientationNormal: {\n    marginRight: 0,\n  } as React.CSSProperties,\n  recipientChatBubbleOrientationNormal: {\n    marginLeft: 0,\n  } as React.CSSProperties,\n  recipientChatBubble: {\n    backgroundColor: '#ccc',\n  } as React.CSSProperties,\n  text: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 300,\n    margin: 0,\n    marginRight: 30,\n    whiteSpace: 'pre',\n  } as React.CSSProperties,\n  userFirstChatBubbleInGroup: {\n    borderTopRightRadius: 0,\n  } as React.CSSProperties,\n  recipientFirstChatBubbleInGroup: {\n    borderTopLeftRadius: 0,\n  } as React.CSSProperties,\n  userLastChatBubbleInGroup: {\n    borderTopRightRadius: 0,\n  } as React.CSSProperties,\n  recipientLastChatBubbleInGroup: {\n    borderTopLeftRadius: 0,\n  } as React.CSSProperties,\n  userCenterChatBubbleInGroup: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  } as React.CSSProperties,\n  recipientCenterChatBubbleInGroup: {\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n  } as React.CSSProperties,\n  createdOn: {\n    position: 'absolute',\n    right: 14,\n    bottom: 2,\n    fontSize: 9,\n    color: 'rgba(255, 255, 255, 0.55)',\n  } as React.CSSProperties,\n  isSend: {\n    position: 'absolute',\n    right: 2,\n    bottom: 2,\n    fontSize: 9,\n  } as React.CSSProperties,\n  lastSeenByContainer: {\n    position: 'absolute',\n    right: -30,\n    top: 0,\n    width: 20,\n    height: '100%',\n  } as React.CSSProperties,\n  loadingSpinnerColor: 'rgba(255, 255, 255, 0.55)',\n  isSendIconColor: '#cddc39',\n};\nexport default styles;\n","import * as React from 'react';\nimport Message from '../Message';\nimport { Author } from '../Author';\nimport {\n  LastSeenAvatarProps,\n  LastSeenAvatarStyles,\n  LastSeenAvatarClasses,\n} from './../LastSeenAvatar';\nimport chatBubbleStyles, { ChatBubbleStyles } from './styles';\nexport { ChatBubbleStyles };\nimport classnames from 'classnames';\n\nexport interface MessageRenderProps<T = string> {\n  message: Message<T>;\n}\n\nexport interface ChatBubbleClasses {\n  chatBubbleWrapper?: string;\n  chatBubble?: string;\n  systemChatBubbleContainer?: string;\n  systemChatBubbleText?: string;\n  userChatBubbleOrientationNormal?: string;\n  recipientChatBubbleOrientationNormal?: string;\n  text?: string;\n  userText?: string;\n  recipientText?: string;\n  userChatBubble?: string;\n  recipientChatBubble?: string;\n  firstChatBubbleInGroup?: string;\n  userFirstChatBubbleInGroup?: string;\n  recipientFirstChatBubbleInGroup?: string;\n  lastChatBubbleInGroup?: string;\n  userLastChatBubbleInGroup?: string;\n  recipientLastChatBubbleInGroup?: string;\n  centerChatBubbleInGroup?: string;\n  userCenterChatBubbleInGroup?: string;\n  recipientCenterChatBubbleInGroup?: string;\n  createdOn?: string;\n  recipientCreatedOn?: string;\n  userCreatedOn?: string;\n  isSend?: string;\n\n  lastSeenByContainer?: string;\n}\n\nexport interface ChatBubbleProps<T = string> {\n  message: Message<T>;\n  author?: Author;\n\n  style?: React.CSSProperties;\n  styles?: ChatBubbleStyles;\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\n\n  className?: string;\n  classes?: ChatBubbleClasses;\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\n\n  bubblesCentered?: boolean;\n  yourAuthorId: number;\n  isFirstInGroup?: boolean;\n  isLastInGroup?: boolean;\n  isCenterInGroup?: boolean;\n  lastSeenByAuthors?: Author[];\n  showRecipientLastSeenMessage?: boolean;\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\n  customMessageRender?: (props: MessageRenderProps<T>) => JSX.Element | string;\n}\n\nexport interface ChatBubbleState {\n  mouseOverLastSeenContainer: boolean;\n}\n\nexport default class ChatBubble<T = string> extends React.PureComponent<\n  ChatBubbleProps<T>,\n  ChatBubbleState\n> {\n  constructor(props: ChatBubbleProps<T>) {\n    super(props);\n    this.state = {\n      mouseOverLastSeenContainer: false,\n    };\n  }\n\n  public render() {\n    if (!this.props.message) {\n      return null;\n    }\n\n    const {\n      lastSeenAvatarStyles,\n      yourAuthorId,\n      lastSeenAvatarClasses,\n    } = this.props;\n\n    let { styles, classes } = this.props;\n\n    if (!classes) {\n      classes = {};\n    }\n\n    if (!styles) {\n      styles = {};\n    }\n    const {\n      userChatBubble,\n      chatBubble,\n      text,\n      userText,\n      recipientText,\n      recipientChatBubble,\n      firstChatBubbleInGroup,\n      userFirstChatBubbleInGroup,\n      recipientFirstChatBubbleInGroup,\n      centerChatBubbleInGroup,\n      userCenterChatBubbleInGroup,\n      recipientCenterChatBubbleInGroup,\n      lastChatBubbleInGroup,\n      userLastChatBubbleInGroup,\n      recipientLastChatBubbleInGroup,\n      userChatBubbleOrientationNormal,\n      recipientChatBubbleOrientationNormal,\n      chatBubbleWrapper,\n      createdOn,\n      userCreatedOn,\n      recipientCreatedOn,\n      isSendIconColor,\n      loadingSpinnerColor,\n      lastSeenByContainer,\n    } = styles;\n    const youAreAuthor = this.props.message.authorId === yourAuthorId;\n\n    // message.id 0 is reserved for blue\n    const finalChatBubbleStyles: React.CSSProperties = {\n      ...chatBubbleStyles.chatBubble,\n      ...chatBubble,\n      ...this.props.style,\n      ...(youAreAuthor\n        ? chatBubbleStyles.userChatBubble\n        : chatBubbleStyles.recipientChatBubble),\n      ...(youAreAuthor ? userChatBubble : recipientChatBubble),\n      ...(youAreAuthor\n        ? chatBubbleStyles.userChatBubbleOrientationNormal\n        : chatBubbleStyles.recipientChatBubbleOrientationNormal),\n      ...(youAreAuthor\n        ? userChatBubbleOrientationNormal\n        : recipientChatBubbleOrientationNormal),\n      ...(this.props.isFirstInGroup && chatBubbleStyles.firstChatBubbleInGroup),\n      ...(this.props.isFirstInGroup &&\n        (youAreAuthor\n          ? chatBubbleStyles.userFirstChatBubbleInGroup\n          : chatBubbleStyles.recipientFirstChatBubbleInGroup)),\n      ...(this.props.isCenterInGroup &&\n        chatBubbleStyles.centerChatBubbleInGroup),\n      ...(this.props.isCenterInGroup &&\n        (youAreAuthor\n          ? chatBubbleStyles.userCenterChatBubbleInGroup\n          : chatBubbleStyles.recipientCenterChatBubbleInGroup)),\n      ...(this.props.isLastInGroup && chatBubbleStyles.lastChatBubbleInGroup),\n      ...(this.props.isLastInGroup &&\n        (youAreAuthor\n          ? chatBubbleStyles.userLastChatBubbleInGroup\n          : chatBubbleStyles.recipientLastChatBubbleInGroup)),\n      ...(this.props.isFirstInGroup && firstChatBubbleInGroup),\n      ...(this.props.isFirstInGroup &&\n        (youAreAuthor\n          ? userFirstChatBubbleInGroup\n          : recipientFirstChatBubbleInGroup)),\n      ...(this.props.isCenterInGroup && centerChatBubbleInGroup),\n      ...(this.props.isCenterInGroup &&\n        (youAreAuthor\n          ? userCenterChatBubbleInGroup\n          : recipientCenterChatBubbleInGroup)),\n      ...(this.props.isLastInGroup && lastChatBubbleInGroup),\n      ...(this.props.isLastInGroup &&\n        (youAreAuthor\n          ? userLastChatBubbleInGroup\n          : recipientLastChatBubbleInGroup)),\n    };\n\n    return (\n      <div\n        style={{\n          ...chatBubbleStyles.chatBubbleWrapper,\n          ...chatBubbleWrapper,\n        }}\n        className={classnames(\n          'react-bell-chat__chat-bubble__wrapper',\n          this.props.className,\n          classes.chatBubbleWrapper\n        )}\n      >\n        <div\n          style={{ ...finalChatBubbleStyles }}\n          className={classnames(\n            'react-bell-chat__chat-bubble',\n            this.props.className,\n            classes.chatBubble,\n            {\n              [classes.recipientChatBubble]: !youAreAuthor,\n              [classes.userChatBubble]: youAreAuthor,\n            }\n          )}\n        >\n          <span\n            style={{\n              ...chatBubbleStyles.text,\n              ...text,\n              ...(youAreAuthor ? userText : recipientText),\n            }}\n            className={classnames(\n              'react-bell-chat__chat-bubble__text',\n              classes.text,\n              youAreAuthor ? classes.userText : classes.recipientText\n            )}\n          >\n            {this.props.customMessageRender\n              ? this.props.customMessageRender({\n                  message: this.props.message,\n                })\n              : this.props.message.message}\n          </span>\n          {this.props.message.createdOn && (\n            <span\n              style={{\n                ...chatBubbleStyles.createdOn,\n                ...createdOn,\n                ...(youAreAuthor\n                  ? chatBubbleStyles.userCreatedOn\n                  : chatBubbleStyles.recipientCreatedOn),\n                ...(youAreAuthor ? userCreatedOn : recipientCreatedOn),\n              }}\n              className={classnames(\n                'react-bell-chat__chat-bubble__created-on',\n                classes.createdOn,\n                youAreAuthor\n                  ? classes.userCreatedOn\n                  : classes.recipientCreatedOn\n              )}\n              title={this.props.message.createdOn.toLocaleString()}\n            >\n              {this.props.message.createdOn.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: true,\n              })}\n            </span>\n          )}\n          {this.props.message.isSend !== undefined && youAreAuthor && (\n            <span\n              style={{\n                ...chatBubbleStyles.isSend,\n              }}\n              className={classnames(\n                'react-bell-chat__chat-bubble__is-send',\n                classes.isSend\n              )}\n              title={this.props.message.isSend ? 'Send' : 'Sending'}\n            >\n              {this.props.message.isSend ? (\n                <svg\n                  width=\"10px\"\n                  height=\"10px\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 10 10\"\n                  preserveAspectRatio=\"xMidYMid\"\n                  style={{ background: 'none' }}\n                >\n                  <path\n                    fill={\n                      isSendIconColor\n                        ? isSendIconColor\n                        : chatBubbleStyles.isSendIconColor\n                    }\n                    {\n                      /* tslint:disable-next-line:max-line-length*/ ...{}\n                    }\n                    d=\"M9,1.7L8.6,1.4C8.5,1.3,8.3,1.3,8.2,1.4L3.9,7C3.8,7.1,3.6,7.1,3.5,7c0,0,0,0,0,0L1.7,5.3c-0.1-0.1-0.3-0.1-0.4,0L1,5.6 C0.9,5.7,0.9,5.9,1,6l2.6,2.6c0.1,0.1,0.3,0.1,0.4,0L9,2.1C9.1,2,9.1,1.8,9,1.7z\"\n                  />\n                </svg>\n              ) : (\n                <svg\n                  width=\"10px\"\n                  height=\"10px\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 100 100\"\n                  preserveAspectRatio=\"xMidYMid\"\n                  style={{ background: 'none' }}\n                >\n                  <path\n                    stroke=\"none\"\n                    d=\"M10 50A40 40 0 0 0 90 50A40 45 0 0 1 10 50\"\n                    fill={\n                      loadingSpinnerColor\n                        ? loadingSpinnerColor\n                        : chatBubbleStyles.loadingSpinnerColor\n                    }\n                    transform=\"rotate(78 50 52.5)\"\n                  >\n                    <animateTransform\n                      attributeName=\"transform\"\n                      type=\"rotate\"\n                      calcMode=\"linear\"\n                      values=\"0 50 52.5;360 50 52.5\"\n                      keyTimes=\"0;1\"\n                      dur=\"1s\"\n                      begin=\"0s\"\n                      repeatCount=\"indefinite\"\n                    />\n                  </path>\n                </svg>\n              )}\n            </span>\n          )}\n        </div>\n        {this.props.showRecipientLastSeenMessage &&\n          this.props.lastSeenByAuthors &&\n          this.props.lastSeenByAuthors.length > 0 &&\n          this.props.customLastSeenAvatar && (\n            <div\n              style={{\n                ...chatBubbleStyles.lastSeenByContainer,\n                ...lastSeenByContainer,\n              }}\n              className={classnames(\n                'react-bell-chat__chat-bubble__last-seen-by__container',\n                classes.lastSeenByContainer\n              )}\n              onMouseEnter={() =>\n                this.setState({ mouseOverLastSeenContainer: true })\n              }\n              onMouseLeave={() =>\n                this.setState({ mouseOverLastSeenContainer: false })\n              }\n              title={\n                'Last seen by ' +\n                this.props.lastSeenByAuthors\n                  .map((a) => a.name)\n                  .join(', ')\n                  .replace(/,(?!.*,)/gim, ' and')\n              }\n            >\n              {this.props.lastSeenByAuthors.map((a, i) => (\n                <this.props.customLastSeenAvatar\n                  key={i}\n                  author={a}\n                  styles={{\n                    ...lastSeenAvatarStyles,\n                    container: {\n                      ...(lastSeenAvatarStyles\n                        ? lastSeenAvatarStyles.container\n                        : {}),\n                      ...(i > 0 && !this.state.mouseOverLastSeenContainer\n                        ? { marginTop: -12 }\n                        : { marginTop: -4 }),\n                    },\n                  }}\n                  classes={lastSeenAvatarClasses}\n                />\n              ))}\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Author } from '../Author';\nimport classnames from 'classnames';\n\nexport interface AvatarStyles {\n  container?: React.CSSProperties;\n  text?: React.CSSProperties;\n}\n\nexport interface AvatarClasses {\n  container?: string;\n  text?: string;\n}\n\nexport interface AvatarProps {\n  author: Author;\n  className?: string;\n  styles?: AvatarStyles;\n  classes?: AvatarClasses;\n  style?: React.CSSProperties;\n}\n\nconst styles = {\n  container: {\n    position: 'absolute',\n    left: -50,\n    top: 0,\n    width: 40,\n    height: 40,\n    lineHeight: '40px',\n    fontWeight: 400,\n    color: 'white',\n    backgroundColor: 'rgb(153, 153, 153)',\n    borderRadius: 20,\n    textAlign: 'center',\n    borderTopRightRadius: 5,\n  } as React.CSSProperties,\n  text: {\n    pointerEvents: 'none',\n  } as React.CSSProperties,\n};\n\nconst Avatar: React.FC<AvatarProps> = (props) => {\n  const { author, classes, className } = props;\n  return (\n    author && (\n      <div\n        style={{\n          ...styles.container,\n          ...(props.styles && props.styles.container),\n          ...props.style,\n        }}\n        title={author.name}\n        className={classnames(\n          'react-bell-chat__avatar',\n          classes && classes.container,\n          className\n        )}\n      >\n        <span\n          style={{ ...styles.text, ...(props.styles && props.styles.text) }}\n          className={classnames(\n            'react-bell-chat__avatar__text',\n            classes && classes.text\n          )}\n        >\n          {author.avatarName\n            ? author.avatarName\n            : author.name\n                .split(' ')\n                .map((part) => part[0])\n                .join('')\n                .toUpperCase()\n                .substr(0, 3)}\n        </span>\n      </div>\n    )\n  );\n};\n\nexport default React.memo(Avatar);\n","import * as React from 'react';\nimport { Author } from '../Author';\nimport classnames from 'classnames';\n\nconst isTypingStyles: IsTypingStyles = {\n  container: {\n    position: 'absolute',\n    bottom: 2,\n    left: 0,\n    right: 0,\n    color: 'rgb(204, 204, 204)',\n    textAlign: 'center',\n  } as React.CSSProperties,\n};\n\nexport interface IsTypingStyles {\n  container?: React.CSSProperties;\n}\n\nexport interface IsTypingClasses {\n  container?: string;\n}\n\nexport interface IsTypingProps {\n  typingAuthors: Author[];\n  styles?: IsTypingStyles;\n  style?: React.CSSProperties;\n  className?: string;\n  classes?: IsTypingClasses;\n}\n\nconst IsTyping: React.FC<IsTypingProps> = (props) => {\n  let { styles, classes } = props;\n  if (!styles) {\n    styles = {};\n  }\n  if (!classes) {\n    classes = {};\n  }\n  const { container } = styles;\n\n  return (\n    props.typingAuthors &&\n    props.typingAuthors.length > 0 && (\n      <div\n        className={classnames(\n          'react-bell-chat__is-typing__container',\n          props.className,\n          classes.container\n        )}\n        style={{ ...isTypingStyles.container, ...container, ...props.style }}\n      >\n        {props.typingAuthors\n          .map((a) => a.name)\n          .join(', ')\n          .replace(/,(?!.*,)/gim, ' and') +\n          (props.typingAuthors.length === 1 ? ' is ' : ' are ') +\n          'typing'}\n      </div>\n    )\n  );\n};\n\nexport default React.memo(IsTyping);\n","import * as React from 'react';\nimport classnames from 'classnames';\n\nexport interface ChatScrollAreaStyles {\n  container?: React.CSSProperties;\n}\n\nexport interface ChatScrollAreaClasses {\n  container?: string;\n}\n\nconst chatScrollAreaStyles: ChatScrollAreaStyles = {\n  container: {\n    overflow: 'auto',\n    padding: '0 10px',\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    // flexDirection: 'column-reverse'\n  },\n};\n\nexport interface ChatScrollAreaProps {\n  maxHeight?: string | number;\n  minHeight?: string | number;\n  children?: JSX.Element | JSX.Element[];\n  styles?: ChatScrollAreaStyles;\n  apiRef?: (api: ChatScrollAreaApi) => void;\n  loadOldMessagesThreshold: number;\n  onLoadOldMessages: () => Promise<void>;\n\n  style?: React.CSSProperties;\n  className?: string;\n  classes?: ChatScrollAreaClasses;\n}\n\nexport interface ChatScrollAreaApi {\n  scrollToBottom: (behavior?: ScrollBehavior) => void;\n  scrollTo: (top: number) => void;\n  scrollTop: () => number;\n  scrollHeight: () => number;\n  clientHeight: () => number;\n  scrolledToBottom: () => boolean;\n  scrolledToLoadThreshold: () => boolean; // Check if we are scrolled to threshold where we need to load messages\n}\n\nexport class ChatScrollArea extends React.PureComponent<ChatScrollAreaProps> {\n  scrollContainer: HTMLDivElement;\n  constructor(props: ChatScrollAreaProps) {\n    super(props);\n    this.containerRef = this.containerRef.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n  }\n\n  public render() {\n    let { styles, classes } = this.props;\n    if (!styles) {\n      styles = {};\n    }\n    if (!classes) {\n      classes = {};\n    }\n    const { container } = styles;\n    return (\n      <div\n        ref={this.containerRef}\n        className={classnames(\n          'react-bell-chat__chat-scroll-area',\n          this.props.className,\n          classes.container\n        )}\n        style={{\n          ...chatScrollAreaStyles.container,\n          ...(this.props.maxHeight !== undefined\n            ? { maxHeight: this.props.maxHeight }\n            : {}),\n          ...(this.props.minHeight !== undefined\n            ? { minHeight: this.props.minHeight }\n            : {}),\n          ...container,\n          ...this.props.style,\n        }}\n        onScroll={this.onScroll}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n\n  private onScroll() {\n    this.scrollContainer &&\n      this.scrollContainer.scrollTop <= this.props.loadOldMessagesThreshold &&\n      this.props.onLoadOldMessages();\n  }\n\n  private containerRef(scrollContainer: HTMLDivElement) {\n    this.scrollContainer = scrollContainer;\n    this.props.apiRef &&\n      this.props.apiRef({\n        scrollToBottom: (behavior = 'auto') =>\n          scrollContainer &&\n          (scrollContainer.scrollTo\n            ? scrollContainer.scrollTo({\n                top: scrollContainer.scrollHeight,\n                behavior,\n              })\n            : (scrollContainer.scrollTop = scrollContainer.scrollHeight)),\n        scrollTo: (top) =>\n          scrollContainer &&\n          (scrollContainer.scrollTo\n            ? scrollContainer.scrollTo({\n                top: top,\n              })\n            : (scrollContainer.scrollTop = top)),\n        scrolledToBottom: () =>\n          this.scrollContainer.clientHeight + this.scrollContainer.scrollTop ===\n          this.scrollContainer.scrollHeight,\n        scrolledToLoadThreshold: () =>\n          this.scrollContainer &&\n          this.scrollContainer.scrollTop <= this.props.loadOldMessagesThreshold,\n        scrollTop: () => this.scrollContainer && this.scrollContainer.scrollTop,\n        scrollHeight: () =>\n          this.scrollContainer && this.scrollContainer.scrollHeight,\n        clientHeight: () =>\n          this.scrollContainer && this.scrollContainer.clientHeight,\n      });\n  }\n}\n\nexport default ChatScrollArea;\n","import * as React from 'react';\nimport { Author } from '../Author';\nimport classnames from 'classnames';\n\nexport interface LastSeenAvatarProps {\n  author: Author;\n  styles?: LastSeenAvatarStyles;\n  classes?: LastSeenAvatarClasses;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport interface LastSeenAvatarClasses {\n  container?: string;\n  text?: string;\n}\n\nexport interface LastSeenAvatarStyles {\n  container?: React.CSSProperties;\n  text?: React.CSSProperties;\n}\n\nconst lastSeenAvatarStyles = {\n  container: {\n    width: 20,\n    height: 20,\n    lineHeight: '20px',\n    fontWeight: 400,\n    fontSize: 10,\n    color: 'white',\n    backgroundColor: 'rgb(153, 153, 153)',\n    borderRadius: 10,\n    textAlign: 'center',\n    transition: '0.3s all ease-in-out',\n    display: 'block',\n    position: 'relative',\n  } as React.CSSProperties,\n  text: {\n    pointerEvents: 'none',\n  } as React.CSSProperties,\n};\n\nconst LastSeenAvatar: React.FC<LastSeenAvatarProps> = (props) => {\n  let { styles, classes } = props;\n  if (!styles) {\n    styles = {};\n  }\n  if (!classes) {\n    classes = {};\n  }\n  const { container, text } = styles;\n  return (\n    props.author && (\n      <div\n        style={{\n          ...lastSeenAvatarStyles.container,\n          ...container,\n          ...props.style,\n        }}\n        className={classnames(\n          'react-bell-chat__last-seen-avatar',\n          props.className,\n          classes.container\n        )}\n      >\n        <span\n          style={{ ...lastSeenAvatarStyles.text, ...text }}\n          className={classnames(\n            'react-bell-chat__last-seen-avatar__text',\n            classes.text\n          )}\n        >\n          {props.author.lastSeenAvatarName\n            ? props.author.lastSeenAvatarName\n            : props.author.name[0].toUpperCase()}\n        </span>\n      </div>\n    )\n  );\n};\n\nexport default React.memo(LastSeenAvatar);\n","import * as React from 'react';\nimport { ChatBubbleProps } from '../ChatBubble';\nimport { ChatBubbleStyles } from '../ChatBubble/styles';\nimport classnames from 'classnames';\n\nconst systemChatBubbleStyles: ChatBubbleStyles = {\n  systemChatBubbleContainer: {\n    textAlign: 'center',\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.55)',\n  } as React.CSSProperties,\n};\n\nexport interface SystemChatBubbleProps<T = string> extends ChatBubbleProps<T> {}\n\nfunction SystemChatBubble<T = string>(props: SystemChatBubbleProps<T>) {\n  let { styles, classes } = props;\n  if (!styles) {\n    styles = {};\n  }\n  if (!classes) {\n    classes = {};\n  }\n  const { systemChatBubbleContainer, systemChatBubbleText } = styles;\n  const time =\n    props.message.createdOn &&\n    props.message.createdOn.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n    });\n  return (\n    props.message && (\n      <div\n        className={classnames(\n          'react-bell-chat__chat-bubble react-bell-chat__chat-bubble--system',\n          props.className,\n          classes.chatBubble\n        )}\n        style={{\n          ...systemChatBubbleStyles.systemChatBubbleContainer,\n          ...systemChatBubbleContainer,\n          ...props.style,\n        }}\n      >\n        {time && (\n          <span\n            className={classnames(\n              'react-bell-chat__chat-bubble--system__created-on',\n              classes.createdOn\n            )}\n            title={props.message.createdOn.toLocaleString()}\n            style={{\n              ...systemChatBubbleStyles.systemChatBubbleText,\n              ...systemChatBubbleText,\n            }}\n          >\n            {time}:{' '}\n          </span>\n        )}\n        {props.message.message}\n      </div>\n    )\n  );\n}\n\nexport default React.memo(SystemChatBubble);\n","import * as React from 'react';\n\nexport interface BubbleGroupStyles {\n  bubbleGroupWrapper?: React.CSSProperties;\n}\n\nexport default {\n  bubbleGroupWrapper: {\n    marginTop: 10,\n    marginBottom: 10,\n    position: 'relative',\n  },\n} as BubbleGroupStyles;\n","import * as React from 'react';\nimport DefaultChatBubble, {\n  ChatBubbleProps,\n  ChatBubbleStyles,\n  MessageRenderProps,\n} from '../ChatBubble';\nimport DefaultSystemChatBubble from '../SystemChatBubble';\nimport bubbleGroupStyles, { BubbleGroupStyles } from './styles';\nimport { Message } from '../';\nimport { Author } from '../Author';\nimport Avatar, { AvatarProps, AvatarClasses } from '../Avatar';\nimport {\n  LastSeenAvatarProps,\n  LastSeenAvatarStyles,\n  LastSeenAvatarClasses,\n} from '../LastSeenAvatar';\nimport { AvatarStyles } from './../Avatar/index';\nimport classnames from 'classnames';\nimport { ChatBubbleClasses } from './../ChatBubble/index';\n\nexport interface BubbleGroupClasses {\n  chatBubbleWrapper?: string;\n}\n\nexport interface BubbleGroupProps<T = string> {\n  yourAuthorId?: number;\n  messages: Message<T>[];\n  author: Author;\n  authors?: Author[];\n  showRecipientAvatar?: boolean;\n  bubblesCentered?: boolean;\n\n  className?: string;\n  classes?: BubbleGroupClasses;\n  chatBubbleClasses?: ChatBubbleClasses;\n  avatarClasses?: AvatarClasses;\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\n\n  style?: React.CSSProperties;\n  styles?: BubbleGroupStyles;\n  chatBubbleStyles?: ChatBubbleStyles;\n  avatarStyles?: AvatarStyles;\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\n\n  customAvatar?: (props: AvatarProps) => JSX.Element;\n  customMessageRender?: (props: MessageRenderProps<T>) => JSX.Element | string;\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\n  customChatBubble?: (props: ChatBubbleProps<T>) => JSX.Element;\n  customSystemChatBubble?: (props: ChatBubbleProps<T>) => JSX.Element;\n  showRecipientLastSeenMessage?: boolean;\n}\n\nexport default class BubbleGroup<T = string> extends React.PureComponent<\n  BubbleGroupProps<T>\n> {\n  public static defaultProps: BubbleGroupProps<string> = {\n    messages: [],\n    author: undefined,\n    customAvatar: Avatar,\n    showRecipientLastSeenMessage: false,\n  };\n\n  constructor(props: BubbleGroupProps<T>) {\n    super(props);\n  }\n\n  renderGroup(messages: Message<T>[], author: Author) {\n    let { styles } = this.props;\n    if (!styles) {\n      styles = {};\n    }\n    const { bubbleGroupWrapper: chatBubbleWrapper } = styles;\n    const {\n      bubblesCentered,\n\n      chatBubbleStyles,\n      lastSeenAvatarStyles,\n      avatarStyles,\n\n      classes,\n      chatBubbleClasses,\n      lastSeenAvatarClasses,\n      avatarClasses,\n\n      showRecipientAvatar,\n      customChatBubble,\n      customSystemChatBubble,\n      showRecipientLastSeenMessage,\n      customLastSeenAvatar,\n      customMessageRender,\n    } = this.props;\n    const ChatBubble = customChatBubble || DefaultChatBubble;\n    const SystemChatBubble = customSystemChatBubble || DefaultSystemChatBubble;\n\n    const messageNodes = messages.map((message, i) => {\n      const props: ChatBubbleProps<T> = {\n        yourAuthorId: this.props.yourAuthorId,\n        author,\n        message,\n        bubblesCentered,\n\n        styles: chatBubbleStyles,\n        lastSeenAvatarStyles,\n\n        classes: chatBubbleClasses,\n        lastSeenAvatarClasses,\n\n        isFirstInGroup: i === 0,\n        isLastInGroup: i === messages.length - 1 && messages.length > 1,\n        isCenterInGroup: i < messages.length - 1 && messages.length > 1,\n        lastSeenByAuthors:\n          this.props.authors &&\n          this.props.authors.filter(\n            (a) =>\n              a.lastSeenMessageId !== undefined &&\n              a.lastSeenMessageId === message.id\n          ),\n        showRecipientLastSeenMessage,\n        customLastSeenAvatar,\n        customMessageRender,\n      };\n      return message.authorId !== undefined ? (\n        <ChatBubble key={i} {...props} />\n      ) : (\n        <SystemChatBubble key={i} {...props} />\n      );\n    });\n\n    const youAreAuthor = author && this.props.yourAuthorId === author.id;\n\n    return (\n      <div\n        style={{\n          ...bubbleGroupStyles.bubbleGroupWrapper,\n          ...chatBubbleWrapper,\n          ...this.props.style,\n        }}\n        className={classnames(\n          'react-bell-chat__bubble-group',\n          classes && classes.chatBubbleWrapper,\n          this.props.className\n        )}\n      >\n        {!youAreAuthor &&\n          showRecipientAvatar &&\n          author &&\n          this.props.customAvatar && (\n            <this.props.customAvatar\n              author={this.props.author}\n              styles={avatarStyles}\n              classes={avatarClasses}\n            />\n          )}\n        {messageNodes}\n      </div>\n    );\n  }\n\n  render() {\n    const { messages, author } = this.props;\n    return this.renderGroup(messages, author);\n  }\n}\n","import * as React from 'react';\n\nexport interface ChatFeedStyles {\n  chatPanel?: React.CSSProperties;\n  showRecipientAvatarChatMessages?: React.CSSProperties;\n  showRecipientLastSeenMessageChatMessages?: React.CSSProperties;\n  showIsTypingChatMessages?: React.CSSProperties;\n  chatMessages?: React.CSSProperties;\n}\n\nconst styles: ChatFeedStyles = {\n  chatPanel: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  showRecipientAvatarChatMessages: {\n    paddingLeft: 50,\n  },\n  showIsTypingChatMessages: {\n    paddingBottom: 24,\n    position: 'relative',\n  },\n  showRecipientLastSeenMessageChatMessages: {\n    paddingRight: 30,\n  },\n  chatMessages: {\n    paddingBottom: 10,\n    paddingTop: 10,\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n  },\n};\n\nexport default styles;\n","const groupBy = <T>(\n  array: Array<T>,\n  groupingKeyFn: (item: T) => string\n): { [key: string]: Array<T> } => {\n  if (typeof groupingKeyFn !== 'function') {\n    throw new Error('groupBy take a function as only parameter');\n  }\n  return array.reduce((result, item) => {\n    const key = groupingKeyFn(item);\n    if (!result[key]) {\n      result[key] = [];\n    }\n    result[key].push(item);\n    return result;\n  }, {});\n};\nexport { groupBy };\n","import * as React from 'react';\nimport classnames from 'classnames';\n\nexport interface DateRowStyles {\n  container?: React.CSSProperties;\n}\n\nexport interface DateRowClasses {\n  container?: string;\n}\n\nconst dateRowStyles: DateRowStyles = {\n  container: {\n    textAlign: 'center',\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.55)',\n  },\n};\n\nexport interface DateRowProps {\n  date: Date;\n  styles?: DateRowStyles;\n  style?: React.CSSProperties;\n  className?: string;\n  classes?: DateRowClasses;\n}\n\nconst DateRow: React.FC<DateRowProps> = (props) => {\n  let { styles, classes } = props;\n  if (!styles) {\n    styles = {};\n  }\n  if (!classes) {\n    classes = {};\n  }\n  const { container } = styles;\n  return (\n    props.date && (\n      <div\n        className={classnames(\n          'react-bell-chat__date-row',\n          props.className,\n          classes.container\n        )}\n        style={{\n          ...dateRowStyles.container,\n          ...container,\n          ...props.style,\n        }}\n        title={props.date.toLocaleDateString([], {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n        })}\n      >\n        {props.date.toLocaleDateString()}\n      </div>\n    )\n  );\n};\n\nexport default React.memo(DateRow);\n","import * as React from 'react';\nimport classnames from 'classnames';\n\nconst loadingMessagesStyles: LoadingMessagesStyle = {\n  container: {\n    display: 'flex',\n    marginBottom: 10,\n  },\n  spinnerColor: 'rgb(0, 132, 255)',\n};\n\nexport interface LoadingMessagesClasses {\n  container?: string;\n}\n\nexport interface LoadingMessagesStyle {\n  container?: React.CSSProperties;\n  spinnerColor?: string;\n}\n\nexport interface LoadingMessagesProps {\n  styles?: LoadingMessagesStyle;\n  classes?: LoadingMessagesClasses;\n  style?: React.CSSProperties;\n  className?: string;\n  isVisible: boolean;\n}\n\nconst LoadingMessages: React.FC<LoadingMessagesProps> = (props) => {\n  let { styles, classes } = props;\n  if (!styles) {\n    styles = {};\n  }\n  if (!classes) {\n    classes = {};\n  }\n  const { container, spinnerColor } = styles;\n  return (\n    <div\n      className={classnames(\n        'react-bell-chat__loading-messages',\n        props.className,\n        classes.container\n      )}\n      style={{\n        ...loadingMessagesStyles.container,\n        ...container,\n        ...props.style,\n      }}\n    >\n      <svg\n        width=\"40px\"\n        height=\"40px\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 100 100\"\n        preserveAspectRatio=\"xMidYMid\"\n        style={{\n          background: 'none',\n          margin: 'auto',\n          fill: spinnerColor\n            ? spinnerColor\n            : loadingMessagesStyles.spinnerColor,\n          opacity: props.isVisible ? 1 : 0,\n          transition: '0.3s all ease-in-out',\n        }}\n      >\n        <title>Loading messages</title>\n        <path\n          stroke=\"none\"\n          d=\"M10 50A40 40 0 0 0 90 50A40 46 0 0 1 10 50\"\n          transform=\"rotate(42 50 53)\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            calcMode=\"linear\"\n            values=\"0 50 53;360 50 53\"\n            keyTimes=\"0;1\"\n            dur=\"1s\"\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n      </svg>\n    </div>\n  );\n};\n\nexport default React.memo(LoadingMessages);\n","// Copyright 2017 Brandon Mowat\n// Written, developed, and designed by Brandon Mowat for the purpose of helping\n// other developers make chat interfaces.\n\nimport * as React from 'react';\nimport BubbleGroup, { BubbleGroupClasses } from '../BubbleGroup';\nimport DefaultChatBubble, {\n  ChatBubbleProps,\n  MessageRenderProps,\n} from '../ChatBubble';\nimport Message from '../Message';\nimport chatStyles, { ChatFeedStyles } from './styles';\nimport { Author } from '../Author';\nimport { ChatBubbleStyles } from '../ChatBubble/';\nimport Avatar, { AvatarProps, AvatarStyles, AvatarClasses } from '../Avatar';\nimport IsTyping, { IsTypingStyles, IsTypingClasses } from '../IsTyping';\nimport ChatScrollArea, {\n  ChatScrollAreaProps,\n  ChatScrollAreaApi,\n  ChatScrollAreaStyles,\n  ChatScrollAreaClasses,\n} from '../ChatScrollArea';\nimport LastSeenAvatar, {\n  LastSeenAvatarProps,\n  LastSeenAvatarStyles,\n  LastSeenAvatarClasses,\n} from '../LastSeenAvatar';\nimport { groupBy } from '../utils/utils';\nimport DateRow, {\n  DateRowProps,\n  DateRowStyles,\n  DateRowClasses,\n} from '../DateRow';\nimport LoadingMessages, {\n  LoadingMessagesProps,\n  LoadingMessagesStyle,\n  LoadingMessagesClasses,\n} from '../LoadingMessages';\nimport SystemChatBubble from '../SystemChatBubble';\nimport classnames from 'classnames';\nimport { BubbleGroupStyles } from '../BubbleGroup/styles';\nimport { ChatBubbleClasses } from './../ChatBubble/index';\n\n// Model for ChatFeed props.\n\nexport { ChatFeedStyles };\n\nexport interface ChatFeedClasses {\n  chatPanel?: string;\n  showRecipientAvatarChatMessages?: string;\n  showRecipientLastSeenMessageChatMessages?: string;\n  showIsTypingChatMessages?: string;\n  chatMessages?: string;\n}\n\nexport interface ChatFeedProps<T = string> {\n  // Structural props\n  className?: string;\n\n  // Functional props\n  messages: Message<T>[];\n  authors: Author[];\n  yourAuthorId: number;\n  hasOldMessages?: boolean;\n  loadOldMessagesThreshold?: number;\n\n  // Visual props\n  bubblesCentered?: boolean;\n  maxHeight?: string | number;\n  minHeight?: string | number;\n\n  // Switches\n  showDateRow?: boolean;\n  showRecipientAvatar?: boolean;\n  showRecipientLastSeenMessage?: boolean;\n  showIsTyping?: boolean;\n  showLoadingMessages?: boolean;\n\n  // Custom components\n  customLoadingMessages?: (props: LoadingMessagesProps) => JSX.Element;\n  customChatBubble?: (props: ChatBubbleProps<T>) => JSX.Element;\n  customSystemChatBubble?: (props: ChatBubbleProps<T>) => JSX.Element;\n  customAvatar?: (props: AvatarProps) => JSX.Element;\n  customScrollArea?: (props: ChatScrollAreaProps) => JSX.Element;\n  customIsTyping?: (props: ChatScrollAreaProps) => JSX.Element;\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\n  customMessageRender?: (props: MessageRenderProps<T>) => JSX.Element | string;\n  customDateRow?: (props: DateRowProps) => JSX.Element;\n\n  // Callbacks\n  onLoadOldMessages?: () => Promise<void>;\n\n  // Styles\n  style?: React.CSSProperties;\n  styles?: ChatFeedStyles;\n  bubbleGroupStyles?: BubbleGroupStyles;\n  chatBubbleStyles?: ChatBubbleStyles;\n  chatScrollArea?: ChatScrollAreaStyles;\n  avatarStyles?: AvatarStyles;\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\n  dateRowStyles?: DateRowStyles;\n  loadingMessagesStyle?: LoadingMessagesStyle;\n  isTypingStyles?: IsTypingStyles;\n  chatFeedStyles?: ChatFeedStyles;\n\n  // Classes\n  classes?: ChatFeedClasses;\n  chatBubbleClasses?: ChatBubbleClasses;\n  bubbleGroupClasses?: BubbleGroupClasses;\n  chatScrollAreaClasses?: ChatScrollAreaClasses;\n  avatarClasses?: AvatarClasses;\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\n  dateRowClasses?: DateRowClasses;\n  loadingMessagesClasses?: LoadingMessagesClasses;\n  isTypingClasses?: IsTypingClasses;\n  chatFeedClasses?: ChatFeedStyles;\n}\n\nexport interface ChatFeedState {\n  isLoadingMessages: boolean;\n}\n\nexport interface ChatFeedApi {\n  onMessageSend: () => void;\n  scrollApi: ChatScrollAreaApi;\n}\n\nfunction DefaultChatBubbleFunc<T>(props: ChatBubbleProps<T>) {\n  return <DefaultChatBubble<T> {...props} />;\n}\nfunction DefaultScrollAreaFunc(props: ChatScrollAreaProps) {\n  return <ChatScrollArea {...props} />;\n}\nfunction DefaultMessageRenderFunc<T>(props: MessageRenderProps<T>) {\n  return props.message && props.message.message;\n}\n\nexport interface ChatFeedSnapshot {\n  wasScrolledToBottom: boolean;\n  scrollHeight: number;\n  clientHeight: number;\n}\n\n// React component to render a complete chat feed\nexport default class ChatFeed<T = string>\n  extends React.PureComponent<ChatFeedProps<T>, ChatFeedState>\n  implements ChatFeedApi {\n  public static defaultProps: ChatFeedProps = {\n    messages: [],\n    authors: [],\n    customChatBubble: DefaultChatBubbleFunc,\n    customMessageRender: DefaultMessageRenderFunc,\n    customAvatar: Avatar,\n    customScrollArea: DefaultScrollAreaFunc,\n    customLastSeenAvatar: LastSeenAvatar,\n    customDateRow: DateRow,\n    customLoadingMessages: LoadingMessages,\n    yourAuthorId: 0,\n    loadOldMessagesThreshold: 50,\n    customSystemChatBubble: SystemChatBubble,\n  };\n\n  public scrollApi: ChatScrollAreaApi;\n\n  constructor(props: ChatFeedProps<T>) {\n    super(props);\n    this.onLoadOldMessages = this.onLoadOldMessages.bind(this);\n    this.apiRef = this.apiRef.bind(this);\n    this.state = {\n      isLoadingMessages: false,\n    };\n  }\n\n  public onMessageSend() {\n    this.scrollApi && this.scrollApi.scrollToBottom();\n  }\n\n  componentDidMount() {\n    this.scrollApi && this.scrollApi.scrollToBottom();\n  }\n\n  getSnapshotBeforeUpdate(\n    prevProps: ChatFeedProps<T>,\n    prevState: ChatFeedState\n  ) {\n    const wasScrolledToBottom =\n      this.scrollApi && this.scrollApi.scrolledToBottom();\n    const scrollHeight = this.scrollApi && this.scrollApi.scrollHeight();\n    const clientHeight = this.scrollApi && this.scrollApi.clientHeight();\n\n    return {\n      wasScrolledToBottom,\n      scrollHeight,\n      clientHeight,\n    };\n  }\n\n  componentDidUpdate(\n    prevProps: ChatFeedProps<T>,\n    prevState: ChatFeedState,\n    snapshot: ChatFeedSnapshot\n  ) {\n    if (\n      this.props.messages.length !== prevProps.messages.length &&\n      snapshot &&\n      snapshot.wasScrolledToBottom\n    ) {\n      this.scrollApi.scrollToBottom();\n    } else if (\n      this.props.messages.length !== prevProps.messages.length &&\n      snapshot &&\n      prevState.isLoadingMessages\n    ) {\n      const scrollHeight = this.scrollApi && this.scrollApi.scrollHeight();\n      this.scrollApi.scrollTo(scrollHeight - snapshot.scrollHeight);\n    }\n  }\n\n  /**\n   * Determines what type of message/messages to render.\n   */\n  renderMessages<T>(messages: Message<T>[]) {\n    let { styles } = this.props;\n    if (!styles) {\n      styles = {};\n    }\n    const {\n      chatBubbleStyles,\n      chatBubbleClasses,\n      dateRowStyles,\n      dateRowClasses,\n      avatarStyles,\n      avatarClasses,\n      lastSeenAvatarStyles,\n      lastSeenAvatarClasses,\n      bubbleGroupStyles,\n      bubbleGroupClasses,\n    } = this.props;\n    const { customChatBubble, showRecipientAvatar } = this.props;\n\n    // First group by days\n    const groups = groupBy(\n      messages,\n      (item) => item.createdOn && item.createdOn.toDateString()\n    );\n    let messageNodes: JSX.Element[] = [];\n    let jsxKey = 0;\n    Object.keys(groups).forEach((key) => {\n      let group = [];\n      const messagesGroup = groups[key];\n      if (\n        messagesGroup[0] &&\n        messagesGroup[0].createdOn &&\n        this.props.showDateRow\n      ) {\n        messageNodes.push(\n          <this.props.customDateRow\n            key={key}\n            date={messagesGroup[0].createdOn}\n            styles={dateRowStyles}\n            classes={dateRowClasses}\n          />\n        );\n      }\n      messageNodes = messageNodes.concat(\n        messagesGroup.map((message, index) => {\n          group.push(message);\n          // Find diff in message type or no more messages\n          if (\n            !messagesGroup[index + 1] ||\n            messagesGroup[index + 1].authorId !== message.authorId\n          ) {\n            const messageGroup = group;\n            const author =\n              this.props.authors &&\n              this.props.authors.filter((a) => a.id === message.authorId)[0];\n            group = [];\n            jsxKey++;\n            return (\n              <BubbleGroup\n                key={jsxKey}\n                yourAuthorId={this.props.yourAuthorId}\n                messages={messageGroup}\n                author={author}\n                authors={this.props.authors}\n                showRecipientAvatar={showRecipientAvatar}\n                customChatBubble={customChatBubble}\n                chatBubbleStyles={chatBubbleStyles}\n                chatBubbleClasses={chatBubbleClasses}\n                avatarStyles={avatarStyles}\n                avatarClasses={avatarClasses}\n                lastSeenAvatarStyles={lastSeenAvatarStyles}\n                lastSeenAvatarClasses={lastSeenAvatarClasses}\n                showRecipientLastSeenMessage={\n                  this.props.showRecipientLastSeenMessage\n                }\n                customAvatar={this.props.customAvatar}\n                customLastSeenAvatar={this.props.customLastSeenAvatar}\n                customMessageRender={this.props.customMessageRender}\n                customSystemChatBubble={this.props.customSystemChatBubble}\n                classes={bubbleGroupClasses}\n                styles={bubbleGroupStyles}\n              />\n            );\n          }\n          return null;\n        })\n      );\n    });\n    return messageNodes;\n  }\n\n  renderIsTyping() {\n    let { styles } = this.props;\n    if (!styles) {\n      styles = {};\n    }\n    const { isTypingStyles, isTypingClasses } = this.props;\n    const typingAuthors =\n      this.props.authors &&\n      this.props.authors.filter(\n        (a) => a.isTyping && a.id !== this.props.yourAuthorId\n      );\n    if (!typingAuthors || typingAuthors.length === 0) {\n      return null;\n    }\n    return (\n      <IsTyping\n        typingAuthors={typingAuthors}\n        styles={isTypingStyles}\n        classes={isTypingClasses}\n      />\n    );\n  }\n\n  apiRef(e: ChatScrollAreaApi) {\n    if (!this.scrollApi) {\n      e.scrollToBottom();\n    }\n    this.scrollApi = e;\n  }\n\n  /**\n   * render : renders our chat feed\n   */\n  render() {\n    let { styles, classes } = this.props;\n    if (!styles) {\n      styles = {};\n    }\n    if (!classes) {\n      classes = {};\n    }\n    const {\n      loadingMessagesStyle,\n      chatFeedStyles,\n      chatScrollArea,\n      loadingMessagesClasses,\n      chatScrollAreaClasses,\n    } = this.props;\n    return (\n      <div\n        className={classnames(\n          'react-bell-chat__chat-panel',\n          this.props.className,\n          classes.chatPanel\n        )}\n        style={{\n          ...chatStyles.chatPanel,\n          ...(chatFeedStyles && chatFeedStyles.chatPanel),\n          ...this.props.style,\n        }}\n      >\n        <this.props.customScrollArea\n          minHeight={this.props.minHeight}\n          maxHeight={this.props.maxHeight}\n          apiRef={this.apiRef}\n          loadOldMessagesThreshold={this.props.loadOldMessagesThreshold}\n          onLoadOldMessages={this.onLoadOldMessages}\n          styles={chatScrollArea}\n          classes={chatScrollAreaClasses}\n        >\n          <div\n            style={{\n              ...chatStyles.chatMessages,\n              ...(this.props.showRecipientAvatar &&\n                chatStyles.showRecipientAvatarChatMessages),\n              ...(this.props.showRecipientAvatar &&\n                styles.showRecipientAvatarChatMessages),\n              ...(this.props.showIsTyping &&\n                chatStyles.showIsTypingChatMessages),\n              ...(this.props.showIsTyping && styles.showIsTypingChatMessages),\n              ...(this.props.showRecipientLastSeenMessage &&\n                chatStyles.showRecipientLastSeenMessageChatMessages),\n              ...(this.props.showRecipientLastSeenMessage &&\n                styles.showRecipientLastSeenMessageChatMessages),\n            }}\n            className={classnames(\n              'react-bell-chat__chat-messages',\n              classes.chatMessages,\n              this.props.showRecipientAvatar &&\n                classes.showRecipientAvatarChatMessages,\n              this.props.showIsTyping && classes.showIsTypingChatMessages,\n              this.props.showRecipientLastSeenMessage &&\n                classes.showRecipientLastSeenMessageChatMessages\n            )}\n          >\n            {\n              <this.props.customLoadingMessages\n                isVisible={\n                  this.props.showLoadingMessages || this.state.isLoadingMessages\n                }\n                styles={loadingMessagesStyle}\n                classes={loadingMessagesClasses}\n              />\n            }\n            {this.renderMessages<T>(this.props.messages)}\n            {this.props.showIsTyping && this.renderIsTyping()}\n          </div>\n        </this.props.customScrollArea>\n      </div>\n    );\n  }\n\n  private onLoadOldMessages() {\n    if (!this.state.isLoadingMessages && this.props.hasOldMessages) {\n      return new Promise<void>((resolve) => {\n        this.setState(\n          {\n            isLoadingMessages: true,\n          },\n          () => resolve()\n        );\n      })\n        .then(async () => {\n          if (this.props.onLoadOldMessages) {\n            await this.props.onLoadOldMessages();\n          }\n        })\n        .then(async () => {\n          await new Promise<void>((resolve) => {\n            this.setState(\n              {\n                isLoadingMessages: false,\n              },\n              () => {\n                if (this.scrollApi.scrolledToLoadThreshold()) {\n                  this.scrollApi.scrollTo(\n                    this.props.loadOldMessagesThreshold + 1\n                  );\n                }\n                resolve();\n              }\n            );\n          });\n        });\n    }\n  }\n}\n","import * as React from 'react';\nimport classnames from 'classnames';\n\nexport interface ChatInputStyles {\n  chatInput?: React.CSSProperties;\n  input?: React.CSSProperties;\n}\n\nexport interface ChatInputClasses {\n  chatInput?: string;\n  input?: string;\n}\n\nconst chatInputStyles: ChatInputStyles = {\n  chatInput: {\n    flex: 1,\n  },\n  input: {\n    border: 'none',\n    borderTopWidth: '1',\n    borderTopStyle: 'solid',\n    borderTopColor: '#ddd',\n    fontSize: '16',\n    outline: 'none',\n    padding: '30',\n    width: '100%',\n  },\n};\n\nexport interface ChatInputProps {\n  styles?: ChatInputStyles;\n  inputPlaceholder?: string;\n  className?: string;\n  classes?: ChatInputClasses;\n  style?: React.CSSProperties;\n}\n\nconst ChatInput: React.FC<ChatInputProps> = (props) => {\n  const { inputPlaceholder } = props;\n  let { styles, classes } = props;\n  if (!styles) {\n    styles = {};\n  }\n  if (!classes) {\n    classes = {};\n  }\n  return (\n    <div\n      className={classnames(\n        'react-bell-chat__chat-input',\n        props.className,\n        classes.chatInput\n      )}\n      style={{ ...chatInputStyles.chatInput, ...styles.chatInput }}\n    >\n      <input\n        type=\"text\"\n        className={classnames(\n          'react-bell-chat__chat-input__input',\n          classes.input\n        )}\n        style={{ ...chatInputStyles.input, ...styles.input }}\n        placeholder={inputPlaceholder}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(ChatInput);\n"],"sourceRoot":""}